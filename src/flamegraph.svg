<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="886" onload="init(evt)" viewBox="0 0 1200 886" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="886" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="869.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="869.00"> </text><svg id="frames" x="10" width="1180" total_samples="30240"><g><title>[libcuda.so.530.41.03] (4 samples, 0.01%)</title><rect x="0.0231%" y="725" width="0.0132%" height="15" fill="rgb(227,0,7)" fg:x="7" fg:w="4"/><text x="0.2731%" y="735.50"></text></g><g><title>__poll (17 samples, 0.06%)</title><rect x="0.0364%" y="725" width="0.0562%" height="15" fill="rgb(217,0,24)" fg:x="11" fg:w="17"/><text x="0.2864%" y="735.50"></text></g><g><title>[libcuda.so.530.41.03] (23 samples, 0.08%)</title><rect x="0.0198%" y="741" width="0.0761%" height="15" fill="rgb(221,193,54)" fg:x="6" fg:w="23"/><text x="0.2698%" y="751.50"></text></g><g><title>[libc.so.6] (28 samples, 0.09%)</title><rect x="0.0066%" y="805" width="0.0926%" height="15" fill="rgb(248,212,6)" fg:x="2" fg:w="28"/><text x="0.2566%" y="815.50"></text></g><g><title>[libc.so.6] (28 samples, 0.09%)</title><rect x="0.0066%" y="789" width="0.0926%" height="15" fill="rgb(208,68,35)" fg:x="2" fg:w="28"/><text x="0.2566%" y="799.50"></text></g><g><title>[libcuda.so.530.41.03] (28 samples, 0.09%)</title><rect x="0.0066%" y="773" width="0.0926%" height="15" fill="rgb(232,128,0)" fg:x="2" fg:w="28"/><text x="0.2566%" y="783.50"></text></g><g><title>[libcuda.so.530.41.03] (28 samples, 0.09%)</title><rect x="0.0066%" y="757" width="0.0926%" height="15" fill="rgb(207,160,47)" fg:x="2" fg:w="28"/><text x="0.2566%" y="767.50"></text></g><g><title>cuda-EvtHandlr (31 samples, 0.10%)</title><rect x="0.0000%" y="821" width="0.1025%" height="15" fill="rgb(228,23,34)" fg:x="0" fg:w="31"/><text x="0.2500%" y="831.50"></text></g><g><title>[libcuda.so.530.41.03] (2,199 samples, 7.27%)</title><rect x="0.1025%" y="789" width="7.2718%" height="15" fill="rgb(218,30,26)" fg:x="31" fg:w="2199"/><text x="0.3525%" y="799.50">[libcuda.s..</text></g><g><title>[[heap]] (2,201 samples, 7.28%)</title><rect x="0.1025%" y="805" width="7.2784%" height="15" fill="rgb(220,122,19)" fg:x="31" fg:w="2201"/><text x="0.3525%" y="815.50">[[heap]]</text></g><g><title>&lt;std::io::buffered::bufwriter::BufWriter&lt;W&gt; as std::io::Write&gt;::write (80 samples, 0.26%)</title><rect x="7.3810%" y="789" width="0.2646%" height="15" fill="rgb(250,228,42)" fg:x="2232" fg:w="80"/><text x="7.6310%" y="799.50"></text></g><g><title>[[vdso]] (54 samples, 0.18%)</title><rect x="7.6455%" y="789" width="0.1786%" height="15" fill="rgb(240,193,28)" fg:x="2312" fg:w="54"/><text x="7.8955%" y="799.50"></text></g><g><title>[libc.so.6] (53 samples, 0.18%)</title><rect x="7.8274%" y="789" width="0.1753%" height="15" fill="rgb(216,20,37)" fg:x="2367" fg:w="53"/><text x="8.0774%" y="799.50"></text></g><g><title>[libcuda.so.530.41.03] (1,132 samples, 3.74%)</title><rect x="8.0026%" y="789" width="3.7434%" height="15" fill="rgb(206,188,39)" fg:x="2420" fg:w="1132"/><text x="8.2526%" y="799.50">[lib..</text></g><g><title>__vdso_clock_gettime (38 samples, 0.13%)</title><rect x="11.7460%" y="789" width="0.1257%" height="15" fill="rgb(217,207,13)" fg:x="3552" fg:w="38"/><text x="11.9960%" y="799.50"></text></g><g><title>clock_gettime (39 samples, 0.13%)</title><rect x="11.8717%" y="789" width="0.1290%" height="15" fill="rgb(231,73,38)" fg:x="3590" fg:w="39"/><text x="12.1217%" y="799.50"></text></g><g><title>crc32fast::Hasher::update (133 samples, 0.44%)</title><rect x="12.0040%" y="789" width="0.4398%" height="15" fill="rgb(225,20,46)" fg:x="3630" fg:w="133"/><text x="12.2540%" y="799.50"></text></g><g><title>crc32fast::specialized::pclmulqdq::State::update (88 samples, 0.29%)</title><rect x="12.1528%" y="773" width="0.2910%" height="15" fill="rgb(210,31,41)" fg:x="3675" fg:w="88"/><text x="12.4028%" y="783.50"></text></g><g><title>crc32fast::baseline::update_fast_16 (104 samples, 0.34%)</title><rect x="12.4438%" y="789" width="0.3439%" height="15" fill="rgb(221,200,47)" fg:x="3763" fg:w="104"/><text x="12.6938%" y="799.50"></text></g><g><title>pthread_once (54 samples, 0.18%)</title><rect x="12.7976%" y="789" width="0.1786%" height="15" fill="rgb(226,26,5)" fg:x="3870" fg:w="54"/><text x="13.0476%" y="799.50"></text></g><g><title>std::io::Write::write_all (46 samples, 0.15%)</title><rect x="12.9762%" y="789" width="0.1521%" height="15" fill="rgb(249,33,26)" fg:x="3924" fg:w="46"/><text x="13.2262%" y="799.50"></text></g><g><title>[[stack]] (1,874 samples, 6.20%)</title><rect x="7.3810%" y="805" width="6.1971%" height="15" fill="rgb(235,183,28)" fg:x="2232" fg:w="1874"/><text x="7.6310%" y="815.50">[[stack]]</text></g><g><title>zip::write::ZipWriterStats::update (136 samples, 0.45%)</title><rect x="13.1283%" y="789" width="0.4497%" height="15" fill="rgb(221,5,38)" fg:x="3970" fg:w="136"/><text x="13.3783%" y="799.50"></text></g><g><title>&lt;std::io::buffered::bufwriter::BufWriter&lt;W&gt; as std::io::Write&gt;::write (87 samples, 0.29%)</title><rect x="13.5780%" y="789" width="0.2877%" height="15" fill="rgb(247,18,42)" fg:x="4106" fg:w="87"/><text x="13.8280%" y="799.50"></text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::write_to_buffer_unchecked (40 samples, 0.13%)</title><rect x="13.7335%" y="773" width="0.1323%" height="15" fill="rgb(241,131,45)" fg:x="4153" fg:w="40"/><text x="13.9835%" y="783.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (40 samples, 0.13%)</title><rect x="13.7335%" y="757" width="0.1323%" height="15" fill="rgb(249,31,29)" fg:x="4153" fg:w="40"/><text x="13.9835%" y="767.50"></text></g><g><title>[anon] (135 samples, 0.45%)</title><rect x="13.5780%" y="805" width="0.4464%" height="15" fill="rgb(225,111,53)" fg:x="4106" fg:w="135"/><text x="13.8280%" y="815.50"></text></g><g><title>[libcuda.so.530.41.03] (48 samples, 0.16%)</title><rect x="13.8657%" y="789" width="0.1587%" height="15" fill="rgb(238,160,17)" fg:x="4193" fg:w="48"/><text x="14.1157%" y="799.50"></text></g><g><title>[ld-linux-x86-64.so.2] (7 samples, 0.02%)</title><rect x="14.0245%" y="805" width="0.0231%" height="15" fill="rgb(214,148,48)" fg:x="4241" fg:w="7"/><text x="14.2745%" y="815.50"></text></g><g><title>[libcuda.so.530.41.03] (7 samples, 0.02%)</title><rect x="14.0476%" y="773" width="0.0231%" height="15" fill="rgb(232,36,49)" fg:x="4248" fg:w="7"/><text x="14.2976%" y="783.50"></text></g><g><title>[libcuda.so.530.41.03] (7 samples, 0.02%)</title><rect x="14.0476%" y="757" width="0.0231%" height="15" fill="rgb(209,103,24)" fg:x="4248" fg:w="7"/><text x="14.2976%" y="767.50"></text></g><g><title>pthread_cond_timedwait (6 samples, 0.02%)</title><rect x="14.0509%" y="741" width="0.0198%" height="15" fill="rgb(229,88,8)" fg:x="4249" fg:w="6"/><text x="14.3009%" y="751.50"></text></g><g><title>[libc.so.6] (6 samples, 0.02%)</title><rect x="14.0509%" y="725" width="0.0198%" height="15" fill="rgb(213,181,19)" fg:x="4249" fg:w="6"/><text x="14.3009%" y="735.50"></text></g><g><title>[libc.so.6] (8 samples, 0.03%)</title><rect x="14.0476%" y="805" width="0.0265%" height="15" fill="rgb(254,191,54)" fg:x="4248" fg:w="8"/><text x="14.2976%" y="815.50"></text></g><g><title>[libc.so.6] (8 samples, 0.03%)</title><rect x="14.0476%" y="789" width="0.0265%" height="15" fill="rgb(241,83,37)" fg:x="4248" fg:w="8"/><text x="14.2976%" y="799.50"></text></g><g><title>[libcuda.so.530.41.03] (994 samples, 3.29%)</title><rect x="14.0774%" y="805" width="3.2870%" height="15" fill="rgb(233,36,39)" fg:x="4257" fg:w="994"/><text x="14.3274%" y="815.50">[li..</text></g><g><title>[libcuda.so.530.41.03] (57 samples, 0.19%)</title><rect x="17.1759%" y="789" width="0.1885%" height="15" fill="rgb(226,3,54)" fg:x="5194" fg:w="57"/><text x="17.4259%" y="799.50"></text></g><g><title>cudarc::driver::safe::alloc::&lt;impl cudarc::driver::safe::core::CudaDevice&gt;::alloc (4 samples, 0.01%)</title><rect x="17.5728%" y="581" width="0.0132%" height="15" fill="rgb(245,192,40)" fg:x="5314" fg:w="4"/><text x="17.8228%" y="591.50"></text></g><g><title>cudarc::driver::result::malloc_async (4 samples, 0.01%)</title><rect x="17.5728%" y="565" width="0.0132%" height="15" fill="rgb(238,167,29)" fg:x="5314" fg:w="4"/><text x="17.8228%" y="575.50"></text></g><g><title>[libcuda.so.530.41.03] (4 samples, 0.01%)</title><rect x="17.5728%" y="549" width="0.0132%" height="15" fill="rgb(232,182,51)" fg:x="5314" fg:w="4"/><text x="17.8228%" y="559.50"></text></g><g><title>[libcuda.so.530.41.03] (4 samples, 0.01%)</title><rect x="17.5728%" y="533" width="0.0132%" height="15" fill="rgb(231,60,39)" fg:x="5314" fg:w="4"/><text x="17.8228%" y="543.50"></text></g><g><title>[libcuda.so.530.41.03] (4 samples, 0.01%)</title><rect x="17.5728%" y="517" width="0.0132%" height="15" fill="rgb(208,69,12)" fg:x="5314" fg:w="4"/><text x="17.8228%" y="527.50"></text></g><g><title>&lt;D as dfdx::tensor::storage_traits::TensorFrom&lt;[E: M],(dfdx::shapes::shape::Const&lt;_&gt;,),E&gt;&gt;::try_tensor (10 samples, 0.03%)</title><rect x="17.5728%" y="661" width="0.0331%" height="15" fill="rgb(235,93,37)" fg:x="5314" fg:w="10"/><text x="17.8228%" y="671.50"></text></g><g><title>&lt;D as dfdx::tensor::storage_traits::TensorFrom&lt;&amp;[E: M],(dfdx::shapes::shape::Const&lt;_&gt;,),E&gt;&gt;::try_tensor (10 samples, 0.03%)</title><rect x="17.5728%" y="645" width="0.0331%" height="15" fill="rgb(213,116,39)" fg:x="5314" fg:w="10"/><text x="17.8228%" y="655.50"></text></g><g><title>dfdx::tensor::cuda::allocate::&lt;impl dfdx::tensor::storage_traits::TensorFromVec&lt;E&gt; for dfdx::tensor::cuda::device::Cuda&gt;::try_tensor_from_vec (10 samples, 0.03%)</title><rect x="17.5728%" y="629" width="0.0331%" height="15" fill="rgb(222,207,29)" fg:x="5314" fg:w="10"/><text x="17.8228%" y="639.50"></text></g><g><title>dfdx::tensor::cuda::allocate::&lt;impl dfdx::tensor::cuda::device::Cuda&gt;::tensor_from_host_buf (10 samples, 0.03%)</title><rect x="17.5728%" y="613" width="0.0331%" height="15" fill="rgb(206,96,30)" fg:x="5314" fg:w="10"/><text x="17.8228%" y="623.50"></text></g><g><title>cudarc::driver::safe::alloc::&lt;impl cudarc::driver::safe::core::CudaDevice&gt;::htod_copy (10 samples, 0.03%)</title><rect x="17.5728%" y="597" width="0.0331%" height="15" fill="rgb(218,138,4)" fg:x="5314" fg:w="10"/><text x="17.8228%" y="607.50"></text></g><g><title>cudarc::driver::safe::alloc::&lt;impl cudarc::driver::safe::core::CudaDevice&gt;::htod_copy_into (6 samples, 0.02%)</title><rect x="17.5860%" y="581" width="0.0198%" height="15" fill="rgb(250,191,14)" fg:x="5318" fg:w="6"/><text x="17.8360%" y="591.50"></text></g><g><title>cudarc::driver::result::memcpy_htod_async (6 samples, 0.02%)</title><rect x="17.5860%" y="565" width="0.0198%" height="15" fill="rgb(239,60,40)" fg:x="5318" fg:w="6"/><text x="17.8360%" y="575.50"></text></g><g><title>[libcuda.so.530.41.03] (6 samples, 0.02%)</title><rect x="17.5860%" y="549" width="0.0198%" height="15" fill="rgb(206,27,48)" fg:x="5318" fg:w="6"/><text x="17.8360%" y="559.50"></text></g><g><title>[libcuda.so.530.41.03] (6 samples, 0.02%)</title><rect x="17.5860%" y="533" width="0.0198%" height="15" fill="rgb(225,35,8)" fg:x="5318" fg:w="6"/><text x="17.8360%" y="543.50"></text></g><g><title>[libcuda.so.530.41.03] (6 samples, 0.02%)</title><rect x="17.5860%" y="517" width="0.0198%" height="15" fill="rgb(250,213,24)" fg:x="5318" fg:w="6"/><text x="17.8360%" y="527.50"></text></g><g><title>[libcuda.so.530.41.03] (6 samples, 0.02%)</title><rect x="17.5860%" y="501" width="0.0198%" height="15" fill="rgb(247,123,22)" fg:x="5318" fg:w="6"/><text x="17.8360%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.03%)</title><rect x="17.6422%" y="549" width="0.0265%" height="15" fill="rgb(231,138,38)" fg:x="5335" fg:w="8"/><text x="17.8922%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.03%)</title><rect x="17.6422%" y="533" width="0.0265%" height="15" fill="rgb(231,145,46)" fg:x="5335" fg:w="8"/><text x="17.8922%" y="543.50"></text></g><g><title>core::iter::adapters::flatten::and_then_or_clear (6 samples, 0.02%)</title><rect x="17.6488%" y="517" width="0.0198%" height="15" fill="rgb(251,118,11)" fg:x="5337" fg:w="6"/><text x="17.8988%" y="527.50"></text></g><g><title>core::ops::function::FnOnce::call_once (6 samples, 0.02%)</title><rect x="17.6488%" y="501" width="0.0198%" height="15" fill="rgb(217,147,25)" fg:x="5337" fg:w="6"/><text x="17.8988%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.02%)</title><rect x="17.6488%" y="485" width="0.0198%" height="15" fill="rgb(247,81,37)" fg:x="5337" fg:w="6"/><text x="17.8988%" y="495.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.02%)</title><rect x="17.6488%" y="469" width="0.0198%" height="15" fill="rgb(209,12,38)" fg:x="5337" fg:w="6"/><text x="17.8988%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (5 samples, 0.02%)</title><rect x="17.6687%" y="549" width="0.0165%" height="15" fill="rgb(227,1,9)" fg:x="5343" fg:w="5"/><text x="17.9187%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (5 samples, 0.02%)</title><rect x="17.6687%" y="533" width="0.0165%" height="15" fill="rgb(248,47,43)" fg:x="5343" fg:w="5"/><text x="17.9187%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (5 samples, 0.02%)</title><rect x="17.6687%" y="517" width="0.0165%" height="15" fill="rgb(221,10,30)" fg:x="5343" fg:w="5"/><text x="17.9187%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (5 samples, 0.02%)</title><rect x="17.6687%" y="501" width="0.0165%" height="15" fill="rgb(210,229,1)" fg:x="5343" fg:w="5"/><text x="17.9187%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (5 samples, 0.02%)</title><rect x="17.6687%" y="485" width="0.0165%" height="15" fill="rgb(222,148,37)" fg:x="5343" fg:w="5"/><text x="17.9187%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (5 samples, 0.02%)</title><rect x="17.6687%" y="469" width="0.0165%" height="15" fill="rgb(234,67,33)" fg:x="5343" fg:w="5"/><text x="17.9187%" y="479.50"></text></g><g><title>alloc::alloc::Global::grow_impl (5 samples, 0.02%)</title><rect x="17.6687%" y="453" width="0.0165%" height="15" fill="rgb(247,98,35)" fg:x="5343" fg:w="5"/><text x="17.9187%" y="463.50"></text></g><g><title>alloc::alloc::realloc (5 samples, 0.02%)</title><rect x="17.6687%" y="437" width="0.0165%" height="15" fill="rgb(247,138,52)" fg:x="5343" fg:w="5"/><text x="17.9187%" y="447.50"></text></g><g><title>realloc (5 samples, 0.02%)</title><rect x="17.6687%" y="421" width="0.0165%" height="15" fill="rgb(213,79,30)" fg:x="5343" fg:w="5"/><text x="17.9187%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::set_len (9 samples, 0.03%)</title><rect x="17.6852%" y="549" width="0.0298%" height="15" fill="rgb(246,177,23)" fg:x="5348" fg:w="9"/><text x="17.9352%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (34 samples, 0.11%)</title><rect x="17.6058%" y="645" width="0.1124%" height="15" fill="rgb(230,62,27)" fg:x="5324" fg:w="34"/><text x="17.8558%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (34 samples, 0.11%)</title><rect x="17.6058%" y="629" width="0.1124%" height="15" fill="rgb(216,154,8)" fg:x="5324" fg:w="34"/><text x="17.8558%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (34 samples, 0.11%)</title><rect x="17.6058%" y="613" width="0.1124%" height="15" fill="rgb(244,35,45)" fg:x="5324" fg:w="34"/><text x="17.8558%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (34 samples, 0.11%)</title><rect x="17.6058%" y="597" width="0.1124%" height="15" fill="rgb(251,115,12)" fg:x="5324" fg:w="34"/><text x="17.8558%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (34 samples, 0.11%)</title><rect x="17.6058%" y="581" width="0.1124%" height="15" fill="rgb(240,54,50)" fg:x="5324" fg:w="34"/><text x="17.8558%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (34 samples, 0.11%)</title><rect x="17.6058%" y="565" width="0.1124%" height="15" fill="rgb(233,84,52)" fg:x="5324" fg:w="34"/><text x="17.8558%" y="575.50"></text></g><g><title>[libcuda.so.530.41.03] (5 samples, 0.02%)</title><rect x="17.7249%" y="453" width="0.0165%" height="15" fill="rgb(207,117,47)" fg:x="5360" fg:w="5"/><text x="17.9749%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::unchecked_iterator::UncheckedIterator&gt;::next_unchecked (54 samples, 0.18%)</title><rect x="17.5661%" y="789" width="0.1786%" height="15" fill="rgb(249,43,39)" fg:x="5312" fg:w="54"/><text x="17.8161%" y="799.50"></text></g><g><title>core::ops::try_trait::NeverShortCircuit&lt;T&gt;::wrap_mut_1::{{closure}} (54 samples, 0.18%)</title><rect x="17.5661%" y="773" width="0.1786%" height="15" fill="rgb(209,38,44)" fg:x="5312" fg:w="54"/><text x="17.8161%" y="783.50"></text></g><g><title>&lt;dfdx::data::batch::Batcher&lt;dfdx::shapes::shape::Const&lt;_&gt;,I&gt; as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (54 samples, 0.18%)</title><rect x="17.5661%" y="757" width="0.1786%" height="15" fill="rgb(236,212,23)" fg:x="5312" fg:w="54"/><text x="17.8161%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (54 samples, 0.18%)</title><rect x="17.5661%" y="741" width="0.1786%" height="15" fill="rgb(242,79,21)" fg:x="5312" fg:w="54"/><text x="17.8161%" y="751.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (53 samples, 0.18%)</title><rect x="17.5694%" y="725" width="0.1753%" height="15" fill="rgb(211,96,35)" fg:x="5313" fg:w="53"/><text x="17.8194%" y="735.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (53 samples, 0.18%)</title><rect x="17.5694%" y="709" width="0.1753%" height="15" fill="rgb(253,215,40)" fg:x="5313" fg:w="53"/><text x="17.8194%" y="719.50"></text></g><g><title>hello_ml::main::{{closure}} (53 samples, 0.18%)</title><rect x="17.5694%" y="693" width="0.1753%" height="15" fill="rgb(211,81,21)" fg:x="5313" fg:w="53"/><text x="17.8194%" y="703.50"></text></g><g><title>dfdx::tensor::storage_traits::TensorFrom::tensor (52 samples, 0.17%)</title><rect x="17.5728%" y="677" width="0.1720%" height="15" fill="rgb(208,190,38)" fg:x="5314" fg:w="52"/><text x="17.8228%" y="687.50"></text></g><g><title>&lt;D as dfdx::tensor::storage_traits::TensorFrom&lt;[[E: N]: M],(dfdx::shapes::shape::Const&lt;_&gt;,dfdx::shapes::shape::Const&lt;_&gt;),E&gt;&gt;::try_tensor (42 samples, 0.14%)</title><rect x="17.6058%" y="661" width="0.1389%" height="15" fill="rgb(235,213,38)" fg:x="5324" fg:w="42"/><text x="17.8558%" y="671.50"></text></g><g><title>dfdx::tensor::cuda::allocate::&lt;impl dfdx::tensor::storage_traits::TensorFromVec&lt;E&gt; for dfdx::tensor::cuda::device::Cuda&gt;::try_tensor_from_vec (8 samples, 0.03%)</title><rect x="17.7183%" y="645" width="0.0265%" height="15" fill="rgb(237,122,38)" fg:x="5358" fg:w="8"/><text x="17.9683%" y="655.50"></text></g><g><title>dfdx::tensor::cuda::allocate::&lt;impl dfdx::tensor::cuda::device::Cuda&gt;::tensor_from_host_buf (8 samples, 0.03%)</title><rect x="17.7183%" y="629" width="0.0265%" height="15" fill="rgb(244,218,35)" fg:x="5358" fg:w="8"/><text x="17.9683%" y="639.50"></text></g><g><title>cudarc::driver::safe::alloc::&lt;impl cudarc::driver::safe::core::CudaDevice&gt;::htod_copy (8 samples, 0.03%)</title><rect x="17.7183%" y="613" width="0.0265%" height="15" fill="rgb(240,68,47)" fg:x="5358" fg:w="8"/><text x="17.9683%" y="623.50"></text></g><g><title>cudarc::driver::safe::alloc::&lt;impl cudarc::driver::safe::core::CudaDevice&gt;::htod_copy_into (6 samples, 0.02%)</title><rect x="17.7249%" y="597" width="0.0198%" height="15" fill="rgb(210,16,53)" fg:x="5360" fg:w="6"/><text x="17.9749%" y="607.50"></text></g><g><title>cudarc::driver::result::memcpy_htod_async (6 samples, 0.02%)</title><rect x="17.7249%" y="581" width="0.0198%" height="15" fill="rgb(235,124,12)" fg:x="5360" fg:w="6"/><text x="17.9749%" y="591.50"></text></g><g><title>[libcuda.so.530.41.03] (6 samples, 0.02%)</title><rect x="17.7249%" y="565" width="0.0198%" height="15" fill="rgb(224,169,11)" fg:x="5360" fg:w="6"/><text x="17.9749%" y="575.50"></text></g><g><title>[libcuda.so.530.41.03] (6 samples, 0.02%)</title><rect x="17.7249%" y="549" width="0.0198%" height="15" fill="rgb(250,166,2)" fg:x="5360" fg:w="6"/><text x="17.9749%" y="559.50"></text></g><g><title>[libcuda.so.530.41.03] (6 samples, 0.02%)</title><rect x="17.7249%" y="533" width="0.0198%" height="15" fill="rgb(242,216,29)" fg:x="5360" fg:w="6"/><text x="17.9749%" y="543.50"></text></g><g><title>[libcuda.so.530.41.03] (6 samples, 0.02%)</title><rect x="17.7249%" y="517" width="0.0198%" height="15" fill="rgb(230,116,27)" fg:x="5360" fg:w="6"/><text x="17.9749%" y="527.50"></text></g><g><title>[libcuda.so.530.41.03] (6 samples, 0.02%)</title><rect x="17.7249%" y="501" width="0.0198%" height="15" fill="rgb(228,99,48)" fg:x="5360" fg:w="6"/><text x="17.9749%" y="511.50"></text></g><g><title>[libcuda.so.530.41.03] (6 samples, 0.02%)</title><rect x="17.7249%" y="485" width="0.0198%" height="15" fill="rgb(253,11,6)" fg:x="5360" fg:w="6"/><text x="17.9749%" y="495.50"></text></g><g><title>[libcuda.so.530.41.03] (6 samples, 0.02%)</title><rect x="17.7249%" y="469" width="0.0198%" height="15" fill="rgb(247,143,39)" fg:x="5360" fg:w="6"/><text x="17.9749%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;dfdx::tensor_ops::stack::try_stack&lt;(dfdx::shapes::shape::Const&lt;256_usize&gt;,),f32,dfdx::tensor::cuda::device::Cuda,dfdx::tensor::gradients::NoneTape,[dfdx::tensor::tensor_impls::Tensor&lt;(dfdx::shapes::shape::Const&lt;256_usize&gt;,),f32,dfdx::tensor::cuda::device::Cuda&gt;: 32]&gt;::{{closure}}&gt; (6 samples, 0.02%)</title><rect x="17.7447%" y="645" width="0.0198%" height="15" fill="rgb(236,97,10)" fg:x="5366" fg:w="6"/><text x="17.9947%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;dfdx::tensor::tensor_impls::Tensor&lt;(dfdx::shapes::shape::Const&lt;256_usize&gt;,),f32,dfdx::tensor::cuda::device::Cuda&gt;&gt;&gt; (6 samples, 0.02%)</title><rect x="17.7447%" y="629" width="0.0198%" height="15" fill="rgb(233,208,19)" fg:x="5366" fg:w="6"/><text x="17.9947%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.02%)</title><rect x="17.7447%" y="613" width="0.0198%" height="15" fill="rgb(216,164,2)" fg:x="5366" fg:w="6"/><text x="17.9947%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;[dfdx::tensor::tensor_impls::Tensor&lt;(dfdx::shapes::shape::Const&lt;256_usize&gt;,),f32,dfdx::tensor::cuda::device::Cuda&gt;]&gt; (6 samples, 0.02%)</title><rect x="17.7447%" y="597" width="0.0198%" height="15" fill="rgb(220,129,5)" fg:x="5366" fg:w="6"/><text x="17.9947%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;dfdx::tensor::tensor_impls::Tensor&lt;(dfdx::shapes::shape::Const&lt;256_usize&gt;,),f32,dfdx::tensor::cuda::device::Cuda&gt;&gt; (6 samples, 0.02%)</title><rect x="17.7447%" y="581" width="0.0198%" height="15" fill="rgb(242,17,10)" fg:x="5366" fg:w="6"/><text x="17.9947%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;cudarc::driver::safe::core::CudaSlice&lt;f32&gt;&gt;&gt; (6 samples, 0.02%)</title><rect x="17.7447%" y="565" width="0.0198%" height="15" fill="rgb(242,107,0)" fg:x="5366" fg:w="6"/><text x="17.9947%" y="575.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.02%)</title><rect x="17.7447%" y="549" width="0.0198%" height="15" fill="rgb(251,28,31)" fg:x="5366" fg:w="6"/><text x="17.9947%" y="559.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (6 samples, 0.02%)</title><rect x="17.7447%" y="533" width="0.0198%" height="15" fill="rgb(233,223,10)" fg:x="5366" fg:w="6"/><text x="17.9947%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;cudarc::driver::safe::core::CudaSlice&lt;f32&gt;&gt; (6 samples, 0.02%)</title><rect x="17.7447%" y="517" width="0.0198%" height="15" fill="rgb(215,21,27)" fg:x="5366" fg:w="6"/><text x="17.9947%" y="527.50"></text></g><g><title>&lt;cudarc::driver::safe::core::CudaSlice&lt;T&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.02%)</title><rect x="17.7447%" y="501" width="0.0198%" height="15" fill="rgb(232,23,21)" fg:x="5366" fg:w="6"/><text x="17.9947%" y="511.50"></text></g><g><title>cudarc::driver::result::free_async (6 samples, 0.02%)</title><rect x="17.7447%" y="485" width="0.0198%" height="15" fill="rgb(244,5,23)" fg:x="5366" fg:w="6"/><text x="17.9947%" y="495.50"></text></g><g><title>[libcuda.so.530.41.03] (6 samples, 0.02%)</title><rect x="17.7447%" y="469" width="0.0198%" height="15" fill="rgb(226,81,46)" fg:x="5366" fg:w="6"/><text x="17.9947%" y="479.50"></text></g><g><title>[libcuda.so.530.41.03] (6 samples, 0.02%)</title><rect x="17.7447%" y="453" width="0.0198%" height="15" fill="rgb(247,70,30)" fg:x="5366" fg:w="6"/><text x="17.9947%" y="463.50"></text></g><g><title>[libcuda.so.530.41.03] (6 samples, 0.02%)</title><rect x="17.7447%" y="437" width="0.0198%" height="15" fill="rgb(212,68,19)" fg:x="5366" fg:w="6"/><text x="17.9947%" y="447.50"></text></g><g><title>&lt;dfdx::tensor::gradients::NoneTape as dfdx::tensor::gradients::Tape&lt;E,D&gt;&gt;::add_backward_op (7 samples, 0.02%)</title><rect x="17.7447%" y="661" width="0.0231%" height="15" fill="rgb(240,187,13)" fg:x="5366" fg:w="7"/><text x="17.9947%" y="671.50"></text></g><g><title>&lt;indicatif::iter::ProgressBarIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (22 samples, 0.07%)</title><rect x="17.7447%" y="789" width="0.0728%" height="15" fill="rgb(223,113,26)" fg:x="5366" fg:w="22"/><text x="17.9947%" y="799.50"></text></g><g><title>&lt;dfdx::data::stack::Stacker&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (22 samples, 0.07%)</title><rect x="17.7447%" y="773" width="0.0728%" height="15" fill="rgb(206,192,2)" fg:x="5366" fg:w="22"/><text x="17.9947%" y="783.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (22 samples, 0.07%)</title><rect x="17.7447%" y="757" width="0.0728%" height="15" fill="rgb(241,108,4)" fg:x="5366" fg:w="22"/><text x="17.9947%" y="767.50"></text></g><g><title>&lt;dfdx::data::stack::Stacker&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (22 samples, 0.07%)</title><rect x="17.7447%" y="741" width="0.0728%" height="15" fill="rgb(247,173,49)" fg:x="5366" fg:w="22"/><text x="17.9947%" y="751.50"></text></g><g><title>dfdx::tensor_ops::stack::TryStack::stack (22 samples, 0.07%)</title><rect x="17.7447%" y="725" width="0.0728%" height="15" fill="rgb(224,114,35)" fg:x="5366" fg:w="22"/><text x="17.9947%" y="735.50"></text></g><g><title>&lt;(A,B) as dfdx::tensor_ops::stack::TryStack&gt;::try_stack (22 samples, 0.07%)</title><rect x="17.7447%" y="709" width="0.0728%" height="15" fill="rgb(245,159,27)" fg:x="5366" fg:w="22"/><text x="17.9947%" y="719.50"></text></g><g><title>&lt;[dfdx::tensor::tensor_impls::Tensor&lt;S,E,D,T&gt;: N] as dfdx::tensor_ops::stack::TryStack&gt;::try_stack (22 samples, 0.07%)</title><rect x="17.7447%" y="693" width="0.0728%" height="15" fill="rgb(245,172,44)" fg:x="5366" fg:w="22"/><text x="17.9947%" y="703.50"></text></g><g><title>dfdx::tensor_ops::stack::try_stack (22 samples, 0.07%)</title><rect x="17.7447%" y="677" width="0.0728%" height="15" fill="rgb(236,23,11)" fg:x="5366" fg:w="22"/><text x="17.9947%" y="687.50"></text></g><g><title>dfdx::tensor_ops::stack::cuda_kernel::&lt;impl dfdx::tensor_ops::stack::StackKernel&lt;E&gt; for dfdx::tensor::cuda::device::Cuda&gt;::forward (15 samples, 0.05%)</title><rect x="17.7679%" y="661" width="0.0496%" height="15" fill="rgb(205,117,38)" fg:x="5373" fg:w="15"/><text x="18.0179%" y="671.50"></text></g><g><title>cudarc::driver::safe::alloc::&lt;impl cudarc::driver::safe::core::CudaDevice&gt;::dtod_copy (15 samples, 0.05%)</title><rect x="17.7679%" y="645" width="0.0496%" height="15" fill="rgb(237,72,25)" fg:x="5373" fg:w="15"/><text x="18.0179%" y="655.50"></text></g><g><title>cudarc::driver::result::memcpy_dtod_async (15 samples, 0.05%)</title><rect x="17.7679%" y="629" width="0.0496%" height="15" fill="rgb(244,70,9)" fg:x="5373" fg:w="15"/><text x="18.0179%" y="639.50"></text></g><g><title>[libcuda.so.530.41.03] (15 samples, 0.05%)</title><rect x="17.7679%" y="613" width="0.0496%" height="15" fill="rgb(217,125,39)" fg:x="5373" fg:w="15"/><text x="18.0179%" y="623.50"></text></g><g><title>[libcuda.so.530.41.03] (15 samples, 0.05%)</title><rect x="17.7679%" y="597" width="0.0496%" height="15" fill="rgb(235,36,10)" fg:x="5373" fg:w="15"/><text x="18.0179%" y="607.50"></text></g><g><title>[libcuda.so.530.41.03] (15 samples, 0.05%)</title><rect x="17.7679%" y="581" width="0.0496%" height="15" fill="rgb(251,123,47)" fg:x="5373" fg:w="15"/><text x="18.0179%" y="591.50"></text></g><g><title>[libcuda.so.530.41.03] (15 samples, 0.05%)</title><rect x="17.7679%" y="565" width="0.0496%" height="15" fill="rgb(221,13,13)" fg:x="5373" fg:w="15"/><text x="18.0179%" y="575.50"></text></g><g><title>[libcuda.so.530.41.03] (11 samples, 0.04%)</title><rect x="17.7811%" y="549" width="0.0364%" height="15" fill="rgb(238,131,9)" fg:x="5377" fg:w="11"/><text x="18.0311%" y="559.50"></text></g><g><title>[libcuda.so.530.41.03] (10 samples, 0.03%)</title><rect x="17.7844%" y="533" width="0.0331%" height="15" fill="rgb(211,50,8)" fg:x="5378" fg:w="10"/><text x="18.0344%" y="543.50"></text></g><g><title>[libcuda.so.530.41.03] (9 samples, 0.03%)</title><rect x="17.7877%" y="517" width="0.0298%" height="15" fill="rgb(245,182,24)" fg:x="5379" fg:w="9"/><text x="18.0377%" y="527.50"></text></g><g><title>[libcuda.so.530.41.03] (8 samples, 0.03%)</title><rect x="17.7910%" y="501" width="0.0265%" height="15" fill="rgb(242,14,37)" fg:x="5380" fg:w="8"/><text x="18.0410%" y="511.50"></text></g><g><title>[libcuda.so.530.41.03] (7 samples, 0.02%)</title><rect x="17.7943%" y="485" width="0.0231%" height="15" fill="rgb(246,228,12)" fg:x="5381" fg:w="7"/><text x="18.0443%" y="495.50"></text></g><g><title>[libcuda.so.530.41.03] (6 samples, 0.02%)</title><rect x="17.7976%" y="469" width="0.0198%" height="15" fill="rgb(213,55,15)" fg:x="5382" fg:w="6"/><text x="18.0476%" y="479.50"></text></g><g><title>[libcuda.so.530.41.03] (5 samples, 0.02%)</title><rect x="17.8009%" y="453" width="0.0165%" height="15" fill="rgb(209,9,3)" fg:x="5383" fg:w="5"/><text x="18.0509%" y="463.50"></text></g><g><title>[libcuda.so.530.41.03] (4 samples, 0.01%)</title><rect x="17.8042%" y="437" width="0.0132%" height="15" fill="rgb(230,59,30)" fg:x="5384" fg:w="4"/><text x="18.0542%" y="447.50"></text></g><g><title>[libc.so.6] (4 samples, 0.01%)</title><rect x="17.8175%" y="789" width="0.0132%" height="15" fill="rgb(209,121,21)" fg:x="5388" fg:w="4"/><text x="18.0675%" y="799.50"></text></g><g><title>[libcublasLt.so.12.1.0.26] (4 samples, 0.01%)</title><rect x="17.8373%" y="789" width="0.0132%" height="15" fill="rgb(220,109,13)" fg:x="5394" fg:w="4"/><text x="18.0873%" y="799.50"></text></g><g><title>[libcuda.so.530.41.03] (1,923 samples, 6.36%)</title><rect x="17.8505%" y="789" width="6.3591%" height="15" fill="rgb(232,18,1)" fg:x="5398" fg:w="1923"/><text x="18.1005%" y="799.50">[libcuda..</text></g><g><title>__vdso_clock_gettime (102 samples, 0.34%)</title><rect x="24.2097%" y="789" width="0.3373%" height="15" fill="rgb(215,41,42)" fg:x="7321" fg:w="102"/><text x="24.4597%" y="799.50"></text></g><g><title>[libcuda.so.530.41.03] (102 samples, 0.34%)</title><rect x="24.2097%" y="773" width="0.3373%" height="15" fill="rgb(224,123,36)" fg:x="7321" fg:w="102"/><text x="24.4597%" y="783.50"></text></g><g><title>clock_gettime (95 samples, 0.31%)</title><rect x="24.5503%" y="789" width="0.3142%" height="15" fill="rgb(240,125,3)" fg:x="7424" fg:w="95"/><text x="24.8003%" y="799.50"></text></g><g><title>core::array::drain::drain_array_with (8 samples, 0.03%)</title><rect x="24.8644%" y="789" width="0.0265%" height="15" fill="rgb(205,98,50)" fg:x="7519" fg:w="8"/><text x="25.1144%" y="799.50"></text></g><g><title>core::array::&lt;impl [T: N]&gt;::try_map::{{closure}} (8 samples, 0.03%)</title><rect x="24.8644%" y="773" width="0.0265%" height="15" fill="rgb(205,185,37)" fg:x="7519" fg:w="8"/><text x="25.1144%" y="783.50"></text></g><g><title>core::array::try_from_trusted_iterator (8 samples, 0.03%)</title><rect x="24.8644%" y="757" width="0.0265%" height="15" fill="rgb(238,207,15)" fg:x="7519" fg:w="8"/><text x="25.1144%" y="767.50"></text></g><g><title>core::array::try_from_fn (8 samples, 0.03%)</title><rect x="24.8644%" y="741" width="0.0265%" height="15" fill="rgb(213,199,42)" fg:x="7519" fg:w="8"/><text x="25.1144%" y="751.50"></text></g><g><title>core::array::try_from_fn_erased (6 samples, 0.02%)</title><rect x="24.8710%" y="725" width="0.0198%" height="15" fill="rgb(235,201,11)" fg:x="7521" fg:w="6"/><text x="25.1210%" y="735.50"></text></g><g><title>core::array::try_from_trusted_iterator::next::{{closure}} (6 samples, 0.02%)</title><rect x="24.8710%" y="709" width="0.0198%" height="15" fill="rgb(207,46,11)" fg:x="7521" fg:w="6"/><text x="25.1210%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::unchecked_iterator::UncheckedIterator&gt;::next_unchecked (6 samples, 0.02%)</title><rect x="24.8710%" y="693" width="0.0198%" height="15" fill="rgb(241,35,35)" fg:x="7521" fg:w="6"/><text x="25.1210%" y="703.50"></text></g><g><title>core::ops::try_trait::NeverShortCircuit&lt;T&gt;::wrap_mut_1::{{closure}} (5 samples, 0.02%)</title><rect x="24.8743%" y="677" width="0.0165%" height="15" fill="rgb(243,32,47)" fg:x="7522" fg:w="5"/><text x="25.1243%" y="687.50"></text></g><g><title>[libc.so.6] (5 samples, 0.02%)</title><rect x="24.8743%" y="661" width="0.0165%" height="15" fill="rgb(247,202,23)" fg:x="7522" fg:w="5"/><text x="25.1243%" y="671.50"></text></g><g><title>crc32fast::baseline::update_fast_16 (77 samples, 0.25%)</title><rect x="24.8909%" y="789" width="0.2546%" height="15" fill="rgb(219,102,11)" fg:x="7527" fg:w="77"/><text x="25.1409%" y="799.50"></text></g><g><title>dfdx::tensor::numpy::&lt;impl dfdx::tensor::tensor_impls::Tensor&lt;S,E,D,T&gt;&gt;::write_to_npz (55 samples, 0.18%)</title><rect x="25.1620%" y="789" width="0.1819%" height="15" fill="rgb(243,110,44)" fg:x="7609" fg:w="55"/><text x="25.4120%" y="799.50"></text></g><g><title>dfdx::tensor::numpy::&lt;impl dfdx::tensor::tensor_impls::Tensor&lt;S,E,D,T&gt;&gt;::write_to (55 samples, 0.18%)</title><rect x="25.1620%" y="773" width="0.1819%" height="15" fill="rgb(222,74,54)" fg:x="7609" fg:w="55"/><text x="25.4120%" y="783.50"></text></g><g><title>&lt;f32 as dfdx::tensor::numpy::NumpyDtype&gt;::write_endian (55 samples, 0.18%)</title><rect x="25.1620%" y="757" width="0.1819%" height="15" fill="rgb(216,99,12)" fg:x="7609" fg:w="55"/><text x="25.4120%" y="767.50"></text></g><g><title>[libcuda.so.530.41.03] (4 samples, 0.01%)</title><rect x="25.3671%" y="341" width="0.0132%" height="15" fill="rgb(226,22,26)" fg:x="7671" fg:w="4"/><text x="25.6171%" y="351.50"></text></g><g><title>[libcuda.so.530.41.03] (4 samples, 0.01%)</title><rect x="25.3671%" y="325" width="0.0132%" height="15" fill="rgb(217,163,10)" fg:x="7671" fg:w="4"/><text x="25.6171%" y="335.50"></text></g><g><title>dfdx::optim::adam::cuda_kernel::&lt;impl dfdx::optim::adam::AdamKernel&lt;E&gt; for dfdx::tensor::cuda::device::Cuda&gt;::update (10 samples, 0.03%)</title><rect x="25.3505%" y="501" width="0.0331%" height="15" fill="rgb(213,25,53)" fg:x="7666" fg:w="10"/><text x="25.6005%" y="511.50"></text></g><g><title>cudarc::driver::safe::ptx::&lt;impl cudarc::driver::safe::core::CudaDevice&gt;::load_ptx (10 samples, 0.03%)</title><rect x="25.3505%" y="485" width="0.0331%" height="15" fill="rgb(252,105,26)" fg:x="7666" fg:w="10"/><text x="25.6005%" y="495.50"></text></g><g><title>cudarc::driver::result::module::load_data (10 samples, 0.03%)</title><rect x="25.3505%" y="469" width="0.0331%" height="15" fill="rgb(220,39,43)" fg:x="7666" fg:w="10"/><text x="25.6005%" y="479.50"></text></g><g><title>[libcuda.so.530.41.03] (10 samples, 0.03%)</title><rect x="25.3505%" y="453" width="0.0331%" height="15" fill="rgb(229,68,48)" fg:x="7666" fg:w="10"/><text x="25.6005%" y="463.50"></text></g><g><title>[libcuda.so.530.41.03] (10 samples, 0.03%)</title><rect x="25.3505%" y="437" width="0.0331%" height="15" fill="rgb(252,8,32)" fg:x="7666" fg:w="10"/><text x="25.6005%" y="447.50"></text></g><g><title>[libcuda.so.530.41.03] (10 samples, 0.03%)</title><rect x="25.3505%" y="421" width="0.0331%" height="15" fill="rgb(223,20,43)" fg:x="7666" fg:w="10"/><text x="25.6005%" y="431.50"></text></g><g><title>[libcuda.so.530.41.03] (10 samples, 0.03%)</title><rect x="25.3505%" y="405" width="0.0331%" height="15" fill="rgb(229,81,49)" fg:x="7666" fg:w="10"/><text x="25.6005%" y="415.50"></text></g><g><title>[libcuda.so.530.41.03] (10 samples, 0.03%)</title><rect x="25.3505%" y="389" width="0.0331%" height="15" fill="rgb(236,28,36)" fg:x="7666" fg:w="10"/><text x="25.6005%" y="399.50"></text></g><g><title>[libcuda.so.530.41.03] (10 samples, 0.03%)</title><rect x="25.3505%" y="373" width="0.0331%" height="15" fill="rgb(249,185,26)" fg:x="7666" fg:w="10"/><text x="25.6005%" y="383.50"></text></g><g><title>[libcuda.so.530.41.03] (6 samples, 0.02%)</title><rect x="25.3638%" y="357" width="0.0198%" height="15" fill="rgb(249,174,33)" fg:x="7670" fg:w="6"/><text x="25.6138%" y="367.50"></text></g><g><title>&lt;dfdx::optim::adam::Adam&lt;M,E,D&gt; as dfdx::optim::optimizer::Optimizer&lt;M,D,E&gt;&gt;::update (11 samples, 0.04%)</title><rect x="25.3505%" y="773" width="0.0364%" height="15" fill="rgb(233,201,37)" fg:x="7666" fg:w="11"/><text x="25.6005%" y="783.50"></text></g><g><title>dfdx::nn::impl_module_for_tuples::&lt;impl dfdx::nn::tensor_collection::collection::TensorCollection&lt;E,D&gt; for (M1,M2,M3)&gt;::iter_tensors (11 samples, 0.04%)</title><rect x="25.3505%" y="757" width="0.0364%" height="15" fill="rgb(221,78,26)" fg:x="7666" fg:w="11"/><text x="25.6005%" y="767.50"></text></g><g><title>dfdx::nn::tensor_collection::visitor_impls::&lt;impl dfdx::nn::tensor_collection::collection::ModuleVisitor&lt;T,E,D&gt; for dfdx::nn::tensor_collection::visitor::RecursiveWalker&lt;&lt;&lt;F as dfdx::nn::tensor_collection::visitor::TensorVisitor&lt;E,D&gt;&gt;::Viewer as dfdx::nn::tensor_collection::visitor::TensorViewer&gt;::View&lt;T&gt;,F&gt;&gt;::visit_fields (11 samples, 0.04%)</title><rect x="25.3505%" y="741" width="0.0364%" height="15" fill="rgb(250,127,30)" fg:x="7666" fg:w="11"/><text x="25.6005%" y="751.50"></text></g><g><title>dfdx::nn::tensor_collection::visitor_impls::&lt;impl dfdx::nn::tensor_collection::visitor::ModuleFields&lt;Mod,E,D&gt; for (M1,M2,M3)&gt;::visit_fields (11 samples, 0.04%)</title><rect x="25.3505%" y="725" width="0.0364%" height="15" fill="rgb(230,49,44)" fg:x="7666" fg:w="11"/><text x="25.6005%" y="735.50"></text></g><g><title>dfdx::nn::tensor_collection::visitor_impls::&lt;impl dfdx::nn::tensor_collection::visitor::ModuleFields&lt;Mod,E,D&gt; for dfdx::nn::tensor_collection::visitor::ModuleField&lt;F1,F2,Mod,Field&gt;&gt;::visit_fields (11 samples, 0.04%)</title><rect x="25.3505%" y="709" width="0.0364%" height="15" fill="rgb(229,67,23)" fg:x="7666" fg:w="11"/><text x="25.6005%" y="719.50"></text></g><g><title>dfdx::nn::tensor_collection::visitor_impls::&lt;impl dfdx::nn::tensor_collection::collection::ModuleVisitor&lt;T,E,D&gt; for dfdx::nn::tensor_collection::visitor::RecursiveWalker&lt;&lt;&lt;F as dfdx::nn::tensor_collection::visitor::TensorVisitor&lt;E,D&gt;&gt;::Viewer as dfdx::nn::tensor_collection::visitor::TensorViewer&gt;::View&lt;T&gt;,F&gt;&gt;::visit_module (11 samples, 0.04%)</title><rect x="25.3505%" y="693" width="0.0364%" height="15" fill="rgb(249,83,47)" fg:x="7666" fg:w="11"/><text x="25.6005%" y="703.50"></text></g><g><title>dfdx::nn::impl_module_for_tuples::&lt;impl dfdx::nn::tensor_collection::collection::TensorCollection&lt;E,D&gt; for (M1,M2)&gt;::iter_tensors (11 samples, 0.04%)</title><rect x="25.3505%" y="677" width="0.0364%" height="15" fill="rgb(215,43,3)" fg:x="7666" fg:w="11"/><text x="25.6005%" y="687.50"></text></g><g><title>dfdx::nn::tensor_collection::visitor_impls::&lt;impl dfdx::nn::tensor_collection::collection::ModuleVisitor&lt;T,E,D&gt; for dfdx::nn::tensor_collection::visitor::RecursiveWalker&lt;&lt;&lt;F as dfdx::nn::tensor_collection::visitor::TensorVisitor&lt;E,D&gt;&gt;::Viewer as dfdx::nn::tensor_collection::visitor::TensorViewer&gt;::View&lt;T&gt;,F&gt;&gt;::visit_fields (11 samples, 0.04%)</title><rect x="25.3505%" y="661" width="0.0364%" height="15" fill="rgb(238,154,13)" fg:x="7666" fg:w="11"/><text x="25.6005%" y="671.50"></text></g><g><title>dfdx::nn::tensor_collection::visitor_impls::&lt;impl dfdx::nn::tensor_collection::visitor::ModuleFields&lt;Mod,E,D&gt; for (M1,M2)&gt;::visit_fields (11 samples, 0.04%)</title><rect x="25.3505%" y="645" width="0.0364%" height="15" fill="rgb(219,56,2)" fg:x="7666" fg:w="11"/><text x="25.6005%" y="655.50"></text></g><g><title>dfdx::nn::tensor_collection::visitor_impls::&lt;impl dfdx::nn::tensor_collection::visitor::ModuleFields&lt;Mod,E,D&gt; for dfdx::nn::tensor_collection::visitor::ModuleField&lt;F1,F2,Mod,Field&gt;&gt;::visit_fields (11 samples, 0.04%)</title><rect x="25.3505%" y="629" width="0.0364%" height="15" fill="rgb(233,0,4)" fg:x="7666" fg:w="11"/><text x="25.6005%" y="639.50"></text></g><g><title>dfdx::nn::tensor_collection::visitor_impls::&lt;impl dfdx::nn::tensor_collection::collection::ModuleVisitor&lt;T,E,D&gt; for dfdx::nn::tensor_collection::visitor::RecursiveWalker&lt;&lt;&lt;F as dfdx::nn::tensor_collection::visitor::TensorVisitor&lt;E,D&gt;&gt;::Viewer as dfdx::nn::tensor_collection::visitor::TensorViewer&gt;::View&lt;T&gt;,F&gt;&gt;::visit_module (11 samples, 0.04%)</title><rect x="25.3505%" y="613" width="0.0364%" height="15" fill="rgb(235,30,7)" fg:x="7666" fg:w="11"/><text x="25.6005%" y="623.50"></text></g><g><title>&lt;dfdx::nn::linear::Linear&lt;_,_,E,D&gt; as dfdx::nn::tensor_collection::collection::TensorCollection&lt;E,D&gt;&gt;::iter_tensors (11 samples, 0.04%)</title><rect x="25.3505%" y="597" width="0.0364%" height="15" fill="rgb(250,79,13)" fg:x="7666" fg:w="11"/><text x="25.6005%" y="607.50"></text></g><g><title>dfdx::nn::tensor_collection::visitor_impls::&lt;impl dfdx::nn::tensor_collection::collection::ModuleVisitor&lt;T,E,D&gt; for dfdx::nn::tensor_collection::visitor::RecursiveWalker&lt;&lt;&lt;F as dfdx::nn::tensor_collection::visitor::TensorVisitor&lt;E,D&gt;&gt;::Viewer as dfdx::nn::tensor_collection::visitor::TensorViewer&gt;::View&lt;T&gt;,F&gt;&gt;::visit_fields (11 samples, 0.04%)</title><rect x="25.3505%" y="581" width="0.0364%" height="15" fill="rgb(211,146,34)" fg:x="7666" fg:w="11"/><text x="25.6005%" y="591.50"></text></g><g><title>dfdx::nn::tensor_collection::visitor_impls::&lt;impl dfdx::nn::tensor_collection::visitor::ModuleFields&lt;Mod,E,D&gt; for (M1,M2)&gt;::visit_fields (11 samples, 0.04%)</title><rect x="25.3505%" y="565" width="0.0364%" height="15" fill="rgb(228,22,38)" fg:x="7666" fg:w="11"/><text x="25.6005%" y="575.50"></text></g><g><title>dfdx::nn::tensor_collection::visitor_impls::&lt;impl dfdx::nn::tensor_collection::visitor::ModuleFields&lt;Mod,E,D&gt; for dfdx::nn::tensor_collection::visitor::TensorField&lt;F1,F2,Mod,S,E,D&gt;&gt;::visit_fields (11 samples, 0.04%)</title><rect x="25.3505%" y="549" width="0.0364%" height="15" fill="rgb(235,168,5)" fg:x="7666" fg:w="11"/><text x="25.6005%" y="559.50"></text></g><g><title>dfdx::nn::tensor_collection::visitor_impls::&lt;impl dfdx::nn::tensor_collection::collection::ModuleVisitor&lt;T,E,D&gt; for dfdx::nn::tensor_collection::visitor::RecursiveWalker&lt;&lt;&lt;F as dfdx::nn::tensor_collection::visitor::TensorVisitor&lt;E,D&gt;&gt;::Viewer as dfdx::nn::tensor_collection::visitor::TensorViewer&gt;::View&lt;T&gt;,F&gt;&gt;::visit_tensor (11 samples, 0.04%)</title><rect x="25.3505%" y="533" width="0.0364%" height="15" fill="rgb(221,155,16)" fg:x="7666" fg:w="11"/><text x="25.6005%" y="543.50"></text></g><g><title>&lt;(&amp;mut dfdx::optim::adam::Adam&lt;M,E,D&gt;,&amp;dfdx::tensor::gradients::Gradients&lt;E,D&gt;,dfdx::optim::optimizer::UnusedTensors) as dfdx::nn::tensor_collection::visitor::TensorVisitor&lt;E,D&gt;&gt;::visit (11 samples, 0.04%)</title><rect x="25.3505%" y="517" width="0.0364%" height="15" fill="rgb(215,215,53)" fg:x="7666" fg:w="11"/><text x="25.6005%" y="527.50"></text></g><g><title>[libc.so.6] (5 samples, 0.02%)</title><rect x="25.4365%" y="437" width="0.0165%" height="15" fill="rgb(223,4,10)" fg:x="7692" fg:w="5"/><text x="25.6865%" y="447.50"></text></g><g><title>[libc.so.6] (10 samples, 0.03%)</title><rect x="25.4993%" y="421" width="0.0331%" height="15" fill="rgb(234,103,6)" fg:x="7711" fg:w="10"/><text x="25.7493%" y="431.50"></text></g><g><title>[libcuda.so.530.41.03] (5 samples, 0.02%)</title><rect x="25.6019%" y="373" width="0.0165%" height="15" fill="rgb(227,97,0)" fg:x="7742" fg:w="5"/><text x="25.8519%" y="383.50"></text></g><g><title>[libcuda.so.530.41.03] (4 samples, 0.01%)</title><rect x="25.6052%" y="357" width="0.0132%" height="15" fill="rgb(234,150,53)" fg:x="7743" fg:w="4"/><text x="25.8552%" y="367.50"></text></g><g><title>[libcuda.so.530.41.03] (19 samples, 0.06%)</title><rect x="25.5589%" y="405" width="0.0628%" height="15" fill="rgb(228,201,54)" fg:x="7729" fg:w="19"/><text x="25.8089%" y="415.50"></text></g><g><title>[libcuda.so.530.41.03] (8 samples, 0.03%)</title><rect x="25.5952%" y="389" width="0.0265%" height="15" fill="rgb(222,22,37)" fg:x="7740" fg:w="8"/><text x="25.8452%" y="399.50"></text></g><g><title>[libcuda.so.530.41.03] (28 samples, 0.09%)</title><rect x="25.5324%" y="421" width="0.0926%" height="15" fill="rgb(237,53,32)" fg:x="7721" fg:w="28"/><text x="25.7824%" y="431.50"></text></g><g><title>[libcuda.so.530.41.03] (59 samples, 0.20%)</title><rect x="25.4530%" y="437" width="0.1951%" height="15" fill="rgb(233,25,53)" fg:x="7697" fg:w="59"/><text x="25.7030%" y="447.50"></text></g><g><title>strcmp@plt (4 samples, 0.01%)</title><rect x="25.6349%" y="421" width="0.0132%" height="15" fill="rgb(210,40,34)" fg:x="7752" fg:w="4"/><text x="25.8849%" y="431.50"></text></g><g><title>[libcuda.so.530.41.03] (75 samples, 0.25%)</title><rect x="25.4101%" y="453" width="0.2480%" height="15" fill="rgb(241,220,44)" fg:x="7684" fg:w="75"/><text x="25.6601%" y="463.50"></text></g><g><title>[libcublas.so.12.1.0.26] (84 samples, 0.28%)</title><rect x="25.3869%" y="565" width="0.2778%" height="15" fill="rgb(235,28,35)" fg:x="7677" fg:w="84"/><text x="25.6369%" y="575.50"></text></g><g><title>[libcublas.so.12.1.0.26] (84 samples, 0.28%)</title><rect x="25.3869%" y="549" width="0.2778%" height="15" fill="rgb(210,56,17)" fg:x="7677" fg:w="84"/><text x="25.6369%" y="559.50"></text></g><g><title>[libcuda.so.530.41.03] (84 samples, 0.28%)</title><rect x="25.3869%" y="533" width="0.2778%" height="15" fill="rgb(224,130,29)" fg:x="7677" fg:w="84"/><text x="25.6369%" y="543.50"></text></g><g><title>[libcuda.so.530.41.03] (84 samples, 0.28%)</title><rect x="25.3869%" y="517" width="0.2778%" height="15" fill="rgb(235,212,8)" fg:x="7677" fg:w="84"/><text x="25.6369%" y="527.50"></text></g><g><title>[libcuda.so.530.41.03] (84 samples, 0.28%)</title><rect x="25.3869%" y="501" width="0.2778%" height="15" fill="rgb(223,33,50)" fg:x="7677" fg:w="84"/><text x="25.6369%" y="511.50"></text></g><g><title>[libcuda.so.530.41.03] (82 samples, 0.27%)</title><rect x="25.3935%" y="485" width="0.2712%" height="15" fill="rgb(219,149,13)" fg:x="7679" fg:w="82"/><text x="25.6435%" y="495.50"></text></g><g><title>[libcuda.so.530.41.03] (80 samples, 0.26%)</title><rect x="25.4001%" y="469" width="0.2646%" height="15" fill="rgb(250,156,29)" fg:x="7681" fg:w="80"/><text x="25.6501%" y="479.50"></text></g><g><title>[libc.so.6] (85 samples, 0.28%)</title><rect x="25.3869%" y="613" width="0.2811%" height="15" fill="rgb(216,193,19)" fg:x="7677" fg:w="85"/><text x="25.6369%" y="623.50"></text></g><g><title>[libcublas.so.12.1.0.26] (85 samples, 0.28%)</title><rect x="25.3869%" y="597" width="0.2811%" height="15" fill="rgb(216,135,14)" fg:x="7677" fg:w="85"/><text x="25.6369%" y="607.50"></text></g><g><title>[libcublas.so.12.1.0.26] (85 samples, 0.28%)</title><rect x="25.3869%" y="581" width="0.2811%" height="15" fill="rgb(241,47,5)" fg:x="7677" fg:w="85"/><text x="25.6369%" y="591.50"></text></g><g><title>[libcublas.so.12.1.0.26] (89 samples, 0.29%)</title><rect x="25.3869%" y="661" width="0.2943%" height="15" fill="rgb(233,42,35)" fg:x="7677" fg:w="89"/><text x="25.6369%" y="671.50"></text></g><g><title>[libcublas.so.12.1.0.26] (89 samples, 0.29%)</title><rect x="25.3869%" y="645" width="0.2943%" height="15" fill="rgb(231,13,6)" fg:x="7677" fg:w="89"/><text x="25.6369%" y="655.50"></text></g><g><title>[libcublas.so.12.1.0.26] (89 samples, 0.29%)</title><rect x="25.3869%" y="629" width="0.2943%" height="15" fill="rgb(207,181,40)" fg:x="7677" fg:w="89"/><text x="25.6369%" y="639.50"></text></g><g><title>[libcublas.so.12.1.0.26] (4 samples, 0.01%)</title><rect x="25.6680%" y="613" width="0.0132%" height="15" fill="rgb(254,173,49)" fg:x="7762" fg:w="4"/><text x="25.9180%" y="623.50"></text></g><g><title>[libcublas.so.12.1.0.26] (4 samples, 0.01%)</title><rect x="25.6680%" y="597" width="0.0132%" height="15" fill="rgb(221,1,38)" fg:x="7762" fg:w="4"/><text x="25.9180%" y="607.50"></text></g><g><title>[libcublas.so.12.1.0.26] (4 samples, 0.01%)</title><rect x="25.6680%" y="581" width="0.0132%" height="15" fill="rgb(206,124,46)" fg:x="7762" fg:w="4"/><text x="25.9180%" y="591.50"></text></g><g><title>[libcublas.so.12.1.0.26] (4 samples, 0.01%)</title><rect x="25.6680%" y="565" width="0.0132%" height="15" fill="rgb(249,21,11)" fg:x="7762" fg:w="4"/><text x="25.9180%" y="575.50"></text></g><g><title>[libcublas.so.12.1.0.26] (4 samples, 0.01%)</title><rect x="25.6680%" y="549" width="0.0132%" height="15" fill="rgb(222,201,40)" fg:x="7762" fg:w="4"/><text x="25.9180%" y="559.50"></text></g><g><title>[libc.so.6] (38 samples, 0.13%)</title><rect x="25.6911%" y="437" width="0.1257%" height="15" fill="rgb(235,61,29)" fg:x="7769" fg:w="38"/><text x="25.9411%" y="447.50"></text></g><g><title>[libc.so.6] (34 samples, 0.11%)</title><rect x="25.9987%" y="405" width="0.1124%" height="15" fill="rgb(219,207,3)" fg:x="7862" fg:w="34"/><text x="26.2487%" y="415.50"></text></g><g><title>[libc.so.6] (29 samples, 0.10%)</title><rect x="26.3327%" y="389" width="0.0959%" height="15" fill="rgb(222,56,46)" fg:x="7963" fg:w="29"/><text x="26.5827%" y="399.50"></text></g><g><title>[libcuda.so.530.41.03] (24 samples, 0.08%)</title><rect x="27.0833%" y="325" width="0.0794%" height="15" fill="rgb(239,76,54)" fg:x="8190" fg:w="24"/><text x="27.3333%" y="335.50"></text></g><g><title>[libcuda.so.530.41.03] (10 samples, 0.03%)</title><rect x="27.1296%" y="309" width="0.0331%" height="15" fill="rgb(231,124,27)" fg:x="8204" fg:w="10"/><text x="27.3796%" y="319.50"></text></g><g><title>[libcuda.so.530.41.03] (5 samples, 0.02%)</title><rect x="27.1462%" y="293" width="0.0165%" height="15" fill="rgb(249,195,6)" fg:x="8209" fg:w="5"/><text x="27.3962%" y="303.50"></text></g><g><title>clock_gettime (4 samples, 0.01%)</title><rect x="27.1660%" y="325" width="0.0132%" height="15" fill="rgb(237,174,47)" fg:x="8215" fg:w="4"/><text x="27.4160%" y="335.50"></text></g><g><title>__vdso_clock_gettime (4 samples, 0.01%)</title><rect x="27.1660%" y="309" width="0.0132%" height="15" fill="rgb(206,201,31)" fg:x="8215" fg:w="4"/><text x="27.4160%" y="319.50"></text></g><g><title>[libcuda.so.530.41.03] (60 samples, 0.20%)</title><rect x="26.9841%" y="341" width="0.1984%" height="15" fill="rgb(231,57,52)" fg:x="8160" fg:w="60"/><text x="27.2341%" y="351.50"></text></g><g><title>[libcuda.so.530.41.03] (230 samples, 0.76%)</title><rect x="26.4286%" y="389" width="0.7606%" height="15" fill="rgb(248,177,22)" fg:x="7992" fg:w="230"/><text x="26.6786%" y="399.50"></text></g><g><title>[libcuda.so.530.41.03] (201 samples, 0.66%)</title><rect x="26.5245%" y="373" width="0.6647%" height="15" fill="rgb(215,211,37)" fg:x="8021" fg:w="201"/><text x="26.7745%" y="383.50"></text></g><g><title>[libcuda.so.530.41.03] (88 samples, 0.29%)</title><rect x="26.8981%" y="357" width="0.2910%" height="15" fill="rgb(241,128,51)" fg:x="8134" fg:w="88"/><text x="27.1481%" y="367.50"></text></g><g><title>clock_gettime (10 samples, 0.03%)</title><rect x="27.1892%" y="389" width="0.0331%" height="15" fill="rgb(227,165,31)" fg:x="8222" fg:w="10"/><text x="27.4392%" y="399.50"></text></g><g><title>__vdso_clock_gettime (10 samples, 0.03%)</title><rect x="27.1892%" y="373" width="0.0331%" height="15" fill="rgb(228,167,24)" fg:x="8222" fg:w="10"/><text x="27.4392%" y="383.50"></text></g><g><title>[[vdso]] (9 samples, 0.03%)</title><rect x="27.1925%" y="357" width="0.0298%" height="15" fill="rgb(228,143,12)" fg:x="8223" fg:w="9"/><text x="27.4425%" y="367.50"></text></g><g><title>[libcuda.so.530.41.03] (345 samples, 1.14%)</title><rect x="26.1111%" y="405" width="1.1409%" height="15" fill="rgb(249,149,8)" fg:x="7896" fg:w="345"/><text x="26.3611%" y="415.50"></text></g><g><title>strcmp@plt (7 samples, 0.02%)</title><rect x="27.2288%" y="389" width="0.0231%" height="15" fill="rgb(243,35,44)" fg:x="8234" fg:w="7"/><text x="27.4788%" y="399.50"></text></g><g><title>malloc (4 samples, 0.01%)</title><rect x="27.2652%" y="405" width="0.0132%" height="15" fill="rgb(246,89,9)" fg:x="8245" fg:w="4"/><text x="27.5152%" y="415.50"></text></g><g><title>[libcuda.so.530.41.03] (433 samples, 1.43%)</title><rect x="25.8565%" y="421" width="1.4319%" height="15" fill="rgb(233,213,13)" fg:x="7819" fg:w="433"/><text x="26.1065%" y="431.50"></text></g><g><title>[libcuda.so.530.41.03] (484 samples, 1.60%)</title><rect x="25.6911%" y="453" width="1.6005%" height="15" fill="rgb(233,141,41)" fg:x="7769" fg:w="484"/><text x="25.9411%" y="463.50"></text></g><g><title>[libcuda.so.530.41.03] (446 samples, 1.47%)</title><rect x="25.8168%" y="437" width="1.4749%" height="15" fill="rgb(239,167,4)" fg:x="7807" fg:w="446"/><text x="26.0668%" y="447.50"></text></g><g><title>[libc.so.6] (488 samples, 1.61%)</title><rect x="25.6812%" y="581" width="1.6138%" height="15" fill="rgb(209,217,16)" fg:x="7766" fg:w="488"/><text x="25.9312%" y="591.50"></text></g><g><title>[libcublasLt.so.12.1.0.26] (488 samples, 1.61%)</title><rect x="25.6812%" y="565" width="1.6138%" height="15" fill="rgb(219,88,35)" fg:x="7766" fg:w="488"/><text x="25.9312%" y="575.50"></text></g><g><title>[libcublasLt.so.12.1.0.26] (488 samples, 1.61%)</title><rect x="25.6812%" y="549" width="1.6138%" height="15" fill="rgb(220,193,23)" fg:x="7766" fg:w="488"/><text x="25.9312%" y="559.50"></text></g><g><title>[libcublasLt.so.12.1.0.26] (487 samples, 1.61%)</title><rect x="25.6845%" y="533" width="1.6104%" height="15" fill="rgb(230,90,52)" fg:x="7767" fg:w="487"/><text x="25.9345%" y="543.50"></text></g><g><title>[libcublasLt.so.12.1.0.26] (487 samples, 1.61%)</title><rect x="25.6845%" y="517" width="1.6104%" height="15" fill="rgb(252,106,19)" fg:x="7767" fg:w="487"/><text x="25.9345%" y="527.50"></text></g><g><title>[libcuda.so.530.41.03] (487 samples, 1.61%)</title><rect x="25.6845%" y="501" width="1.6104%" height="15" fill="rgb(206,74,20)" fg:x="7767" fg:w="487"/><text x="25.9345%" y="511.50"></text></g><g><title>[libcuda.so.530.41.03] (487 samples, 1.61%)</title><rect x="25.6845%" y="485" width="1.6104%" height="15" fill="rgb(230,138,44)" fg:x="7767" fg:w="487"/><text x="25.9345%" y="495.50"></text></g><g><title>[libcuda.so.530.41.03] (487 samples, 1.61%)</title><rect x="25.6845%" y="469" width="1.6104%" height="15" fill="rgb(235,182,43)" fg:x="7767" fg:w="487"/><text x="25.9345%" y="479.50"></text></g><g><title>[libcublasLt.so.12.1.0.26] (6 samples, 0.02%)</title><rect x="27.3049%" y="485" width="0.0198%" height="15" fill="rgb(242,16,51)" fg:x="8257" fg:w="6"/><text x="27.5549%" y="495.50"></text></g><g><title>cudarc::cublas::safe::CudaBlas::new (587 samples, 1.94%)</title><rect x="25.3869%" y="709" width="1.9411%" height="15" fill="rgb(248,9,4)" fg:x="7677" fg:w="587"/><text x="25.6369%" y="719.50">c..</text></g><g><title>cudarc::cublas::result::create_handle (587 samples, 1.94%)</title><rect x="25.3869%" y="693" width="1.9411%" height="15" fill="rgb(210,31,22)" fg:x="7677" fg:w="587"/><text x="25.6369%" y="703.50">c..</text></g><g><title>cublasCreate_v2 (587 samples, 1.94%)</title><rect x="25.3869%" y="677" width="1.9411%" height="15" fill="rgb(239,54,39)" fg:x="7677" fg:w="587"/><text x="25.6369%" y="687.50">c..</text></g><g><title>cublasLtCtxInit (498 samples, 1.65%)</title><rect x="25.6812%" y="661" width="1.6468%" height="15" fill="rgb(230,99,41)" fg:x="7766" fg:w="498"/><text x="25.9312%" y="671.50"></text></g><g><title>[libcublasLt.so.12.1.0.26] (498 samples, 1.65%)</title><rect x="25.6812%" y="645" width="1.6468%" height="15" fill="rgb(253,106,12)" fg:x="7766" fg:w="498"/><text x="25.9312%" y="655.50"></text></g><g><title>[libcublasLt.so.12.1.0.26] (498 samples, 1.65%)</title><rect x="25.6812%" y="629" width="1.6468%" height="15" fill="rgb(213,46,41)" fg:x="7766" fg:w="498"/><text x="25.9312%" y="639.50"></text></g><g><title>[libcublasLt.so.12.1.0.26] (498 samples, 1.65%)</title><rect x="25.6812%" y="613" width="1.6468%" height="15" fill="rgb(215,133,35)" fg:x="7766" fg:w="498"/><text x="25.9312%" y="623.50"></text></g><g><title>[libcublasLt.so.12.1.0.26] (498 samples, 1.65%)</title><rect x="25.6812%" y="597" width="1.6468%" height="15" fill="rgb(213,28,5)" fg:x="7766" fg:w="498"/><text x="25.9312%" y="607.50"></text></g><g><title>[libcublasLt.so.12.1.0.26] (10 samples, 0.03%)</title><rect x="27.2950%" y="581" width="0.0331%" height="15" fill="rgb(215,77,49)" fg:x="8254" fg:w="10"/><text x="27.5450%" y="591.50"></text></g><g><title>[libcublasLt.so.12.1.0.26] (10 samples, 0.03%)</title><rect x="27.2950%" y="565" width="0.0331%" height="15" fill="rgb(248,100,22)" fg:x="8254" fg:w="10"/><text x="27.5450%" y="575.50"></text></g><g><title>[libcublasLt.so.12.1.0.26] (10 samples, 0.03%)</title><rect x="27.2950%" y="549" width="0.0331%" height="15" fill="rgb(208,67,9)" fg:x="8254" fg:w="10"/><text x="27.5450%" y="559.50"></text></g><g><title>[libcublasLt.so.12.1.0.26] (10 samples, 0.03%)</title><rect x="27.2950%" y="533" width="0.0331%" height="15" fill="rgb(219,133,21)" fg:x="8254" fg:w="10"/><text x="27.5450%" y="543.50"></text></g><g><title>[libcublasLt.so.12.1.0.26] (10 samples, 0.03%)</title><rect x="27.2950%" y="517" width="0.0331%" height="15" fill="rgb(246,46,29)" fg:x="8254" fg:w="10"/><text x="27.5450%" y="527.50"></text></g><g><title>[libcublasLt.so.12.1.0.26] (10 samples, 0.03%)</title><rect x="27.2950%" y="501" width="0.0331%" height="15" fill="rgb(246,185,52)" fg:x="8254" fg:w="10"/><text x="27.5450%" y="511.50"></text></g><g><title>&lt;dfdx::tensor::cuda::device::Cuda as core::default::Default&gt;::default (595 samples, 1.97%)</title><rect x="25.3869%" y="773" width="1.9676%" height="15" fill="rgb(252,136,11)" fg:x="7677" fg:w="595"/><text x="25.6369%" y="783.50">&lt;..</text></g><g><title>dfdx::tensor::cuda::device::Cuda::seed_from_u64 (595 samples, 1.97%)</title><rect x="25.3869%" y="757" width="1.9676%" height="15" fill="rgb(219,138,53)" fg:x="7677" fg:w="595"/><text x="25.6369%" y="767.50">d..</text></g><g><title>dfdx::tensor::cuda::device::Cuda::try_seed_from_u64 (595 samples, 1.97%)</title><rect x="25.3869%" y="741" width="1.9676%" height="15" fill="rgb(211,51,23)" fg:x="7677" fg:w="595"/><text x="25.6369%" y="751.50">d..</text></g><g><title>dfdx::tensor::cuda::device::Cuda::try_build (595 samples, 1.97%)</title><rect x="25.3869%" y="725" width="1.9676%" height="15" fill="rgb(247,221,28)" fg:x="7677" fg:w="595"/><text x="25.6369%" y="735.50">d..</text></g><g><title>cudarc::driver::safe::core::CudaDevice::new (8 samples, 0.03%)</title><rect x="27.3280%" y="709" width="0.0265%" height="15" fill="rgb(251,222,45)" fg:x="8264" fg:w="8"/><text x="27.5780%" y="719.50"></text></g><g><title>cudarc::driver::result::primary_ctx::retain (8 samples, 0.03%)</title><rect x="27.3280%" y="693" width="0.0265%" height="15" fill="rgb(217,162,53)" fg:x="8264" fg:w="8"/><text x="27.5780%" y="703.50"></text></g><g><title>[libcuda.so.530.41.03] (8 samples, 0.03%)</title><rect x="27.3280%" y="677" width="0.0265%" height="15" fill="rgb(229,93,14)" fg:x="8264" fg:w="8"/><text x="27.5780%" y="687.50"></text></g><g><title>[libcuda.so.530.41.03] (8 samples, 0.03%)</title><rect x="27.3280%" y="661" width="0.0265%" height="15" fill="rgb(209,67,49)" fg:x="8264" fg:w="8"/><text x="27.5780%" y="671.50"></text></g><g><title>[libcuda.so.530.41.03] (8 samples, 0.03%)</title><rect x="27.3280%" y="645" width="0.0265%" height="15" fill="rgb(213,87,29)" fg:x="8264" fg:w="8"/><text x="27.5780%" y="655.50"></text></g><g><title>[libcuda.so.530.41.03] (8 samples, 0.03%)</title><rect x="27.3280%" y="629" width="0.0265%" height="15" fill="rgb(205,151,52)" fg:x="8264" fg:w="8"/><text x="27.5780%" y="639.50"></text></g><g><title>[libcuda.so.530.41.03] (8 samples, 0.03%)</title><rect x="27.3280%" y="613" width="0.0265%" height="15" fill="rgb(253,215,39)" fg:x="8264" fg:w="8"/><text x="27.5780%" y="623.50"></text></g><g><title>[libcuda.so.530.41.03] (8 samples, 0.03%)</title><rect x="27.3280%" y="597" width="0.0265%" height="15" fill="rgb(221,220,41)" fg:x="8264" fg:w="8"/><text x="27.5780%" y="607.50"></text></g><g><title>[libcuda.so.530.41.03] (8 samples, 0.03%)</title><rect x="27.3280%" y="581" width="0.0265%" height="15" fill="rgb(218,133,21)" fg:x="8264" fg:w="8"/><text x="27.5780%" y="591.50"></text></g><g><title>[libcuda.so.530.41.03] (7 samples, 0.02%)</title><rect x="27.3313%" y="565" width="0.0231%" height="15" fill="rgb(221,193,43)" fg:x="8265" fg:w="7"/><text x="27.5813%" y="575.50"></text></g><g><title>[libcuda.so.530.41.03] (7,836 samples, 25.91%)</title><rect x="54.7586%" y="517" width="25.9127%" height="15" fill="rgb(240,128,52)" fg:x="16559" fg:w="7836"/><text x="55.0086%" y="527.50">[libcuda.so.530.41.03]</text></g><g><title>[libcuda.so.530.41.03] (6,357 samples, 21.02%)</title><rect x="59.6495%" y="501" width="21.0218%" height="15" fill="rgb(253,114,12)" fg:x="18038" fg:w="6357"/><text x="59.8995%" y="511.50">[libcuda.so.530.41.03]</text></g><g><title>[libcuda.so.530.41.03] (3,372 samples, 11.15%)</title><rect x="69.5205%" y="485" width="11.1508%" height="15" fill="rgb(215,223,47)" fg:x="21023" fg:w="3372"/><text x="69.7705%" y="495.50">[libcuda.so.530...</text></g><g><title>clock_gettime (2,749 samples, 9.09%)</title><rect x="80.6713%" y="517" width="9.0906%" height="15" fill="rgb(248,225,23)" fg:x="24395" fg:w="2749"/><text x="80.9213%" y="527.50">clock_gettime</text></g><g><title>__vdso_clock_gettime (2,705 samples, 8.95%)</title><rect x="80.8168%" y="501" width="8.9451%" height="15" fill="rgb(250,108,0)" fg:x="24439" fg:w="2705"/><text x="81.0668%" y="511.50">__vdso_clock_..</text></g><g><title>[[vdso]] (1,855 samples, 6.13%)</title><rect x="83.6276%" y="485" width="6.1343%" height="15" fill="rgb(228,208,7)" fg:x="25289" fg:w="1855"/><text x="83.8776%" y="495.50">[[vdso]]</text></g><g><title>clock_gettime@plt (41 samples, 0.14%)</title><rect x="89.7619%" y="517" width="0.1356%" height="15" fill="rgb(244,45,10)" fg:x="27144" fg:w="41"/><text x="90.0119%" y="527.50"></text></g><g><title>pthread_once (48 samples, 0.16%)</title><rect x="89.8975%" y="517" width="0.1587%" height="15" fill="rgb(207,125,25)" fg:x="27185" fg:w="48"/><text x="90.1475%" y="527.50"></text></g><g><title>cudarc::driver::result::memcpy_dtoh_async (19,005 samples, 62.85%)</title><rect x="27.3545%" y="677" width="62.8472%" height="15" fill="rgb(210,195,18)" fg:x="8272" fg:w="19005"/><text x="27.6045%" y="687.50">cudarc::driver::result::memcpy_dtoh_async</text></g><g><title>[libcuda.so.530.41.03] (19,005 samples, 62.85%)</title><rect x="27.3545%" y="661" width="62.8472%" height="15" fill="rgb(249,80,12)" fg:x="8272" fg:w="19005"/><text x="27.6045%" y="671.50">[libcuda.so.530.41.03]</text></g><g><title>[libcuda.so.530.41.03] (19,005 samples, 62.85%)</title><rect x="27.3545%" y="645" width="62.8472%" height="15" fill="rgb(221,65,9)" fg:x="8272" fg:w="19005"/><text x="27.6045%" y="655.50">[libcuda.so.530.41.03]</text></g><g><title>[libcuda.so.530.41.03] (19,005 samples, 62.85%)</title><rect x="27.3545%" y="629" width="62.8472%" height="15" fill="rgb(235,49,36)" fg:x="8272" fg:w="19005"/><text x="27.6045%" y="639.50">[libcuda.so.530.41.03]</text></g><g><title>[libcuda.so.530.41.03] (19,005 samples, 62.85%)</title><rect x="27.3545%" y="613" width="62.8472%" height="15" fill="rgb(225,32,20)" fg:x="8272" fg:w="19005"/><text x="27.6045%" y="623.50">[libcuda.so.530.41.03]</text></g><g><title>[libcuda.so.530.41.03] (19,005 samples, 62.85%)</title><rect x="27.3545%" y="597" width="62.8472%" height="15" fill="rgb(215,141,46)" fg:x="8272" fg:w="19005"/><text x="27.6045%" y="607.50">[libcuda.so.530.41.03]</text></g><g><title>[libcuda.so.530.41.03] (19,005 samples, 62.85%)</title><rect x="27.3545%" y="581" width="62.8472%" height="15" fill="rgb(250,160,47)" fg:x="8272" fg:w="19005"/><text x="27.6045%" y="591.50">[libcuda.so.530.41.03]</text></g><g><title>[libcuda.so.530.41.03] (19,005 samples, 62.85%)</title><rect x="27.3545%" y="565" width="62.8472%" height="15" fill="rgb(216,222,40)" fg:x="8272" fg:w="19005"/><text x="27.6045%" y="575.50">[libcuda.so.530.41.03]</text></g><g><title>[libcuda.so.530.41.03] (19,005 samples, 62.85%)</title><rect x="27.3545%" y="549" width="62.8472%" height="15" fill="rgb(234,217,39)" fg:x="8272" fg:w="19005"/><text x="27.6045%" y="559.50">[libcuda.so.530.41.03]</text></g><g><title>[libcuda.so.530.41.03] (13,109 samples, 43.35%)</title><rect x="46.8519%" y="533" width="43.3499%" height="15" fill="rgb(207,178,40)" fg:x="14168" fg:w="13109"/><text x="47.1019%" y="543.50">[libcuda.so.530.41.03]</text></g><g><title>pthread_once@plt (44 samples, 0.15%)</title><rect x="90.0562%" y="517" width="0.1455%" height="15" fill="rgb(221,136,13)" fg:x="27233" fg:w="44"/><text x="90.3062%" y="527.50"></text></g><g><title>&lt;dfdx::tensor::tensor_impls::Tensor&lt;S,E,D,T&gt; as dfdx::tensor::storage_traits::AsArray&gt;::array (19,006 samples, 62.85%)</title><rect x="27.3545%" y="773" width="62.8505%" height="15" fill="rgb(249,199,10)" fg:x="8272" fg:w="19006"/><text x="27.6045%" y="783.50">&lt;dfdx::tensor::tensor_impls::Tensor&lt;S,E,D,T&gt; as dfdx::tensor::storage_traits::AsArray&gt;::array</text></g><g><title>dfdx::tensor::cuda::allocate::&lt;impl dfdx::tensor::storage_traits::TensorToArray&lt;S,E&gt; for dfdx::tensor::cuda::device::Cuda&gt;::tensor_to_array (19,006 samples, 62.85%)</title><rect x="27.3545%" y="757" width="62.8505%" height="15" fill="rgb(249,222,13)" fg:x="8272" fg:w="19006"/><text x="27.6045%" y="767.50">dfdx::tensor::cuda::allocate::&lt;impl dfdx::tensor::storage_traits::TensorToArray&lt;S,E&gt; for dfdx::tensor::c..</text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (19,006 samples, 62.85%)</title><rect x="27.3545%" y="741" width="62.8505%" height="15" fill="rgb(244,185,38)" fg:x="8272" fg:w="19006"/><text x="27.6045%" y="751.50">&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into</text></g><g><title>cudarc::driver::safe::core::&lt;impl core::convert::TryFrom&lt;cudarc::driver::safe::core::CudaSlice&lt;T&gt;&gt; for alloc::vec::Vec&lt;T&gt;&gt;::try_from (19,006 samples, 62.85%)</title><rect x="27.3545%" y="725" width="62.8505%" height="15" fill="rgb(236,202,9)" fg:x="8272" fg:w="19006"/><text x="27.6045%" y="735.50">cudarc::driver::safe::core::&lt;impl core::convert::TryFrom&lt;cudarc::driver::safe::core::CudaSlice&lt;T&gt;&gt; for a..</text></g><g><title>cudarc::driver::safe::alloc::&lt;impl cudarc::driver::safe::core::CudaDevice&gt;::sync_reclaim (19,006 samples, 62.85%)</title><rect x="27.3545%" y="709" width="62.8505%" height="15" fill="rgb(250,229,37)" fg:x="8272" fg:w="19006"/><text x="27.6045%" y="719.50">cudarc::driver::safe::alloc::&lt;impl cudarc::driver::safe::core::CudaDevice&gt;::sync_reclaim</text></g><g><title>cudarc::driver::safe::alloc::&lt;impl cudarc::driver::safe::core::CudaDevice&gt;::dtoh_sync_copy_into (19,006 samples, 62.85%)</title><rect x="27.3545%" y="693" width="62.8505%" height="15" fill="rgb(206,174,23)" fg:x="8272" fg:w="19006"/><text x="27.6045%" y="703.50">cudarc::driver::safe::alloc::&lt;impl cudarc::driver::safe::core::CudaDevice&gt;::dtoh_sync_copy_into</text></g><g><title>dfdx::tensor_ops::log_softmax::&lt;impl dfdx::tensor::tensor_impls::Tensor&lt;S,E,D,T&gt;&gt;::log_softmax (15 samples, 0.05%)</title><rect x="90.2083%" y="757" width="0.0496%" height="15" fill="rgb(211,33,43)" fg:x="27279" fg:w="15"/><text x="90.4583%" y="767.50"></text></g><g><title>dfdx::tensor_ops::log_softmax::&lt;impl dfdx::tensor::tensor_impls::Tensor&lt;S,E,D,T&gt;&gt;::try_log_softmax (15 samples, 0.05%)</title><rect x="90.2083%" y="741" width="0.0496%" height="15" fill="rgb(245,58,50)" fg:x="27279" fg:w="15"/><text x="90.4583%" y="751.50"></text></g><g><title>&lt;dfdx::tensor::tensor_impls::Tensor&lt;S,E,D,T&gt; as dfdx::tensor_ops::logsumexp_to::LogSumExpTo&gt;::try_logsumexp (12 samples, 0.04%)</title><rect x="90.2183%" y="725" width="0.0397%" height="15" fill="rgb(244,68,36)" fg:x="27282" fg:w="12"/><text x="90.4683%" y="735.50"></text></g><g><title>dfdx::tensor_ops::mul::&lt;impl core::ops::arith::Mul&lt;Rhs&gt; for dfdx::tensor::tensor_impls::Tensor&lt;S,E,D,LhsTape&gt;&gt;::mul (4 samples, 0.01%)</title><rect x="90.2646%" y="757" width="0.0132%" height="15" fill="rgb(232,229,15)" fg:x="27296" fg:w="4"/><text x="90.5146%" y="767.50"></text></g><g><title>dfdx::losses::cross_entropy_with_logits_loss (22 samples, 0.07%)</title><rect x="90.2083%" y="773" width="0.0728%" height="15" fill="rgb(254,30,23)" fg:x="27279" fg:w="22"/><text x="90.4583%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::resize_with (4 samples, 0.01%)</title><rect x="90.2811%" y="517" width="0.0132%" height="15" fill="rgb(235,160,14)" fg:x="27301" fg:w="4"/><text x="90.5311%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (4 samples, 0.01%)</title><rect x="90.2811%" y="501" width="0.0132%" height="15" fill="rgb(212,155,44)" fg:x="27301" fg:w="4"/><text x="90.5311%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (4 samples, 0.01%)</title><rect x="90.2811%" y="485" width="0.0132%" height="15" fill="rgb(226,2,50)" fg:x="27301" fg:w="4"/><text x="90.5311%" y="495.50"></text></g><g><title>&lt;core::iter::sources::repeat_with::RepeatWith&lt;F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (4 samples, 0.01%)</title><rect x="90.2811%" y="469" width="0.0132%" height="15" fill="rgb(234,177,6)" fg:x="27301" fg:w="4"/><text x="90.5311%" y="479.50"></text></g><g><title>dfdx::tensor::cuda::allocate::&lt;impl dfdx::tensor::storage_traits::SampleTensor&lt;E&gt; for dfdx::tensor::cuda::device::Cuda&gt;::try_fill_with_distr::{{closure}} (4 samples, 0.01%)</title><rect x="90.2811%" y="453" width="0.0132%" height="15" fill="rgb(217,24,9)" fg:x="27301" fg:w="4"/><text x="90.5311%" y="463.50"></text></g><g><title>rand::rng::Rng::sample (4 samples, 0.01%)</title><rect x="90.2811%" y="437" width="0.0132%" height="15" fill="rgb(220,13,46)" fg:x="27301" fg:w="4"/><text x="90.5311%" y="447.50"></text></g><g><title>&lt;&amp;D as rand::distributions::distribution::Distribution&lt;T&gt;&gt;::sample (4 samples, 0.01%)</title><rect x="90.2811%" y="421" width="0.0132%" height="15" fill="rgb(239,221,27)" fg:x="27301" fg:w="4"/><text x="90.5311%" y="431.50"></text></g><g><title>&lt;rand::distributions::uniform::Uniform&lt;X&gt; as rand::distributions::distribution::Distribution&lt;X&gt;&gt;::sample (4 samples, 0.01%)</title><rect x="90.2811%" y="405" width="0.0132%" height="15" fill="rgb(222,198,25)" fg:x="27301" fg:w="4"/><text x="90.5311%" y="415.50"></text></g><g><title>&lt;rand::distributions::uniform::UniformFloat&lt;f32&gt; as rand::distributions::uniform::UniformSampler&gt;::sample (4 samples, 0.01%)</title><rect x="90.2811%" y="389" width="0.0132%" height="15" fill="rgb(211,99,13)" fg:x="27301" fg:w="4"/><text x="90.5311%" y="399.50"></text></g><g><title>&lt;dfdx::nn::linear::Linear&lt;_,_,E,D&gt; as dfdx::nn::tensor_collection::collection::TensorCollection&lt;E,D&gt;&gt;::iter_tensors (5 samples, 0.02%)</title><rect x="90.2811%" y="629" width="0.0165%" height="15" fill="rgb(232,111,31)" fg:x="27301" fg:w="5"/><text x="90.5311%" y="639.50"></text></g><g><title>dfdx::nn::tensor_collection::visitor_impls::&lt;impl dfdx::nn::tensor_collection::collection::ModuleVisitor&lt;T,E,D&gt; for dfdx::nn::tensor_collection::visitor::RecursiveWalker&lt;&lt;&lt;F as dfdx::nn::tensor_collection::visitor::TensorVisitor&lt;E,D&gt;&gt;::Viewer as dfdx::nn::tensor_collection::visitor::TensorViewer&gt;::View&lt;T&gt;,F&gt;&gt;::visit_fields (5 samples, 0.02%)</title><rect x="90.2811%" y="613" width="0.0165%" height="15" fill="rgb(245,82,37)" fg:x="27301" fg:w="5"/><text x="90.5311%" y="623.50"></text></g><g><title>dfdx::nn::tensor_collection::visitor_impls::&lt;impl dfdx::nn::tensor_collection::visitor::ModuleFields&lt;Mod,E,D&gt; for (M1,M2)&gt;::visit_fields (5 samples, 0.02%)</title><rect x="90.2811%" y="597" width="0.0165%" height="15" fill="rgb(227,149,46)" fg:x="27301" fg:w="5"/><text x="90.5311%" y="607.50"></text></g><g><title>dfdx::nn::tensor_collection::visitor_impls::&lt;impl dfdx::nn::tensor_collection::visitor::ModuleFields&lt;Mod,E,D&gt; for dfdx::nn::tensor_collection::visitor::TensorField&lt;F1,F2,Mod,S,E,D&gt;&gt;::visit_fields (5 samples, 0.02%)</title><rect x="90.2811%" y="581" width="0.0165%" height="15" fill="rgb(218,36,50)" fg:x="27301" fg:w="5"/><text x="90.5311%" y="591.50"></text></g><g><title>dfdx::nn::tensor_collection::visitor_impls::&lt;impl dfdx::nn::tensor_collection::collection::ModuleVisitor&lt;T,E,D&gt; for dfdx::nn::tensor_collection::visitor::RecursiveWalker&lt;&lt;&lt;F as dfdx::nn::tensor_collection::visitor::TensorVisitor&lt;E,D&gt;&gt;::Viewer as dfdx::nn::tensor_collection::visitor::TensorViewer&gt;::View&lt;T&gt;,F&gt;&gt;::visit_tensor (5 samples, 0.02%)</title><rect x="90.2811%" y="565" width="0.0165%" height="15" fill="rgb(226,80,48)" fg:x="27301" fg:w="5"/><text x="90.5311%" y="575.50"></text></g><g><title>&lt;dfdx::nn::build_module::Builder&lt;D&gt; as dfdx::nn::tensor_collection::visitor::TensorVisitor&lt;E,D&gt;&gt;::visit (5 samples, 0.02%)</title><rect x="90.2811%" y="549" width="0.0165%" height="15" fill="rgb(238,224,15)" fg:x="27301" fg:w="5"/><text x="90.5311%" y="559.50"></text></g><g><title>dfdx::tensor::cuda::allocate::&lt;impl dfdx::tensor::storage_traits::SampleTensor&lt;E&gt; for dfdx::tensor::cuda::device::Cuda&gt;::try_fill_with_distr (5 samples, 0.02%)</title><rect x="90.2811%" y="533" width="0.0165%" height="15" fill="rgb(241,136,10)" fg:x="27301" fg:w="5"/><text x="90.5311%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::for_each::check::{{closure}} (30 samples, 0.10%)</title><rect x="90.2976%" y="373" width="0.0992%" height="15" fill="rgb(208,32,45)" fg:x="27306" fg:w="30"/><text x="90.5476%" y="383.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_sub (30 samples, 0.10%)</title><rect x="90.2976%" y="357" width="0.0992%" height="15" fill="rgb(207,135,9)" fg:x="27306" fg:w="30"/><text x="90.5476%" y="367.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_sub (30 samples, 0.10%)</title><rect x="90.2976%" y="341" width="0.0992%" height="15" fill="rgb(206,86,44)" fg:x="27306" fg:w="30"/><text x="90.5476%" y="351.50"></text></g><g><title>&lt;u32 as rand::distributions::float::IntoFloat&gt;::into_float_with_exponent (5 samples, 0.02%)</title><rect x="90.6713%" y="293" width="0.0165%" height="15" fill="rgb(245,177,15)" fg:x="27419" fg:w="5"/><text x="90.9213%" y="303.50"></text></g><g><title>core::f32::&lt;impl f32&gt;::from_bits (5 samples, 0.02%)</title><rect x="90.6713%" y="277" width="0.0165%" height="15" fill="rgb(206,64,50)" fg:x="27419" fg:w="5"/><text x="90.9213%" y="287.50"></text></g><g><title>core::f32::&lt;impl f32&gt;::from_bits::rt_u32_to_f32 (5 samples, 0.02%)</title><rect x="90.6713%" y="261" width="0.0165%" height="15" fill="rgb(234,36,40)" fg:x="27419" fg:w="5"/><text x="90.9213%" y="271.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::u32x4_sse2&lt;S3,S4,NI&gt; as core::ops::arith::Add&gt;::add (5 samples, 0.02%)</title><rect x="90.8300%" y="117" width="0.0165%" height="15" fill="rgb(213,64,8)" fg:x="27467" fg:w="5"/><text x="91.0800%" y="127.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_add_epi32 (5 samples, 0.02%)</title><rect x="90.8300%" y="101" width="0.0165%" height="15" fill="rgb(210,75,36)" fg:x="27467" fg:w="5"/><text x="91.0800%" y="111.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (4 samples, 0.01%)</title><rect x="90.8631%" y="117" width="0.0132%" height="15" fill="rgb(229,88,21)" fg:x="27477" fg:w="4"/><text x="91.1131%" y="127.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (4 samples, 0.01%)</title><rect x="90.8631%" y="101" width="0.0132%" height="15" fill="rgb(252,204,47)" fg:x="27477" fg:w="4"/><text x="91.1131%" y="111.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as core::ops::arith::AddAssign&gt;::add_assign (23 samples, 0.08%)</title><rect x="90.8962%" y="101" width="0.0761%" height="15" fill="rgb(208,77,27)" fg:x="27487" fg:w="23"/><text x="91.1462%" y="111.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as core::ops::arith::AddAssign&gt;::add_assign (23 samples, 0.08%)</title><rect x="90.8962%" y="85" width="0.0761%" height="15" fill="rgb(221,76,26)" fg:x="27487" fg:w="23"/><text x="91.1462%" y="95.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as core::ops::arith::Add&gt;::add (23 samples, 0.08%)</title><rect x="90.8962%" y="69" width="0.0761%" height="15" fill="rgb(225,139,18)" fg:x="27487" fg:w="23"/><text x="91.1462%" y="79.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (23 samples, 0.08%)</title><rect x="90.8962%" y="53" width="0.0761%" height="15" fill="rgb(230,137,11)" fg:x="27487" fg:w="23"/><text x="91.1462%" y="63.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (5 samples, 0.02%)</title><rect x="90.9557%" y="37" width="0.0165%" height="15" fill="rgb(212,28,1)" fg:x="27505" fg:w="5"/><text x="91.2057%" y="47.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as core::ops::bit::BitXor&gt;::bitxor (12 samples, 0.04%)</title><rect x="90.9722%" y="101" width="0.0397%" height="15" fill="rgb(248,164,17)" fg:x="27510" fg:w="12"/><text x="91.2222%" y="111.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as core::ops::bit::BitXor&gt;::bitxor (12 samples, 0.04%)</title><rect x="90.9722%" y="85" width="0.0397%" height="15" fill="rgb(222,171,42)" fg:x="27510" fg:w="12"/><text x="91.2222%" y="95.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (12 samples, 0.04%)</title><rect x="90.9722%" y="69" width="0.0397%" height="15" fill="rgb(243,84,45)" fg:x="27510" fg:w="12"/><text x="91.2222%" y="79.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right16 (20 samples, 0.07%)</title><rect x="91.0119%" y="101" width="0.0661%" height="15" fill="rgb(252,49,23)" fg:x="27522" fg:w="20"/><text x="91.2619%" y="111.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right16 (20 samples, 0.07%)</title><rect x="91.0119%" y="85" width="0.0661%" height="15" fill="rgb(215,19,7)" fg:x="27522" fg:w="20"/><text x="91.2619%" y="95.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (20 samples, 0.07%)</title><rect x="91.0119%" y="69" width="0.0661%" height="15" fill="rgb(238,81,41)" fg:x="27522" fg:w="20"/><text x="91.2619%" y="79.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_or_si256 (32 samples, 0.11%)</title><rect x="91.0780%" y="69" width="0.1058%" height="15" fill="rgb(210,199,37)" fg:x="27542" fg:w="32"/><text x="91.3280%" y="79.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right20 (36 samples, 0.12%)</title><rect x="91.0780%" y="101" width="0.1190%" height="15" fill="rgb(244,192,49)" fg:x="27542" fg:w="36"/><text x="91.3280%" y="111.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right20 (36 samples, 0.12%)</title><rect x="91.0780%" y="85" width="0.1190%" height="15" fill="rgb(226,211,11)" fg:x="27542" fg:w="36"/><text x="91.3280%" y="95.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (4 samples, 0.01%)</title><rect x="91.1839%" y="69" width="0.0132%" height="15" fill="rgb(236,162,54)" fg:x="27574" fg:w="4"/><text x="91.4339%" y="79.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (4 samples, 0.01%)</title><rect x="91.1839%" y="53" width="0.0132%" height="15" fill="rgb(220,229,9)" fg:x="27574" fg:w="4"/><text x="91.4339%" y="63.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right24 (16 samples, 0.05%)</title><rect x="91.1971%" y="101" width="0.0529%" height="15" fill="rgb(250,87,22)" fg:x="27578" fg:w="16"/><text x="91.4471%" y="111.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right24 (16 samples, 0.05%)</title><rect x="91.1971%" y="85" width="0.0529%" height="15" fill="rgb(239,43,17)" fg:x="27578" fg:w="16"/><text x="91.4471%" y="95.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (16 samples, 0.05%)</title><rect x="91.1971%" y="69" width="0.0529%" height="15" fill="rgb(231,177,25)" fg:x="27578" fg:w="16"/><text x="91.4471%" y="79.50"></text></g><g><title>rand_chacha::guts::round (124 samples, 0.41%)</title><rect x="90.8962%" y="117" width="0.4101%" height="15" fill="rgb(219,179,1)" fg:x="27487" fg:w="124"/><text x="91.1462%" y="127.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right25 (17 samples, 0.06%)</title><rect x="91.2500%" y="101" width="0.0562%" height="15" fill="rgb(238,219,53)" fg:x="27594" fg:w="17"/><text x="91.5000%" y="111.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right25 (17 samples, 0.06%)</title><rect x="91.2500%" y="85" width="0.0562%" height="15" fill="rgb(232,167,36)" fg:x="27594" fg:w="17"/><text x="91.5000%" y="95.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_or_si256 (17 samples, 0.06%)</title><rect x="91.2500%" y="69" width="0.0562%" height="15" fill="rgb(244,19,51)" fg:x="27594" fg:w="17"/><text x="91.5000%" y="79.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::resize_with (314 samples, 1.04%)</title><rect x="90.2976%" y="437" width="1.0384%" height="15" fill="rgb(224,6,22)" fg:x="27306" fg:w="314"/><text x="90.5476%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (314 samples, 1.04%)</title><rect x="90.2976%" y="421" width="1.0384%" height="15" fill="rgb(224,145,5)" fg:x="27306" fg:w="314"/><text x="90.5476%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (314 samples, 1.04%)</title><rect x="90.2976%" y="405" width="1.0384%" height="15" fill="rgb(234,130,49)" fg:x="27306" fg:w="314"/><text x="90.5476%" y="415.50"></text></g><g><title>&lt;core::iter::sources::repeat_with::RepeatWith&lt;F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (314 samples, 1.04%)</title><rect x="90.2976%" y="389" width="1.0384%" height="15" fill="rgb(254,6,2)" fg:x="27306" fg:w="314"/><text x="90.5476%" y="399.50"></text></g><g><title>dfdx::tensor::cuda::allocate::&lt;impl dfdx::tensor::storage_traits::SampleTensor&lt;E&gt; for dfdx::tensor::cuda::device::Cuda&gt;::try_fill_with_distr::{{closure}} (284 samples, 0.94%)</title><rect x="90.3968%" y="373" width="0.9392%" height="15" fill="rgb(208,96,46)" fg:x="27336" fg:w="284"/><text x="90.6468%" y="383.50"></text></g><g><title>rand::rng::Rng::sample (284 samples, 0.94%)</title><rect x="90.3968%" y="357" width="0.9392%" height="15" fill="rgb(239,3,39)" fg:x="27336" fg:w="284"/><text x="90.6468%" y="367.50"></text></g><g><title>&lt;&amp;D as rand::distributions::distribution::Distribution&lt;T&gt;&gt;::sample (284 samples, 0.94%)</title><rect x="90.3968%" y="341" width="0.9392%" height="15" fill="rgb(233,210,1)" fg:x="27336" fg:w="284"/><text x="90.6468%" y="351.50"></text></g><g><title>&lt;rand::distributions::uniform::Uniform&lt;X&gt; as rand::distributions::distribution::Distribution&lt;X&gt;&gt;::sample (284 samples, 0.94%)</title><rect x="90.3968%" y="325" width="0.9392%" height="15" fill="rgb(244,137,37)" fg:x="27336" fg:w="284"/><text x="90.6468%" y="335.50"></text></g><g><title>&lt;rand::distributions::uniform::UniformFloat&lt;f32&gt; as rand::distributions::uniform::UniformSampler&gt;::sample (284 samples, 0.94%)</title><rect x="90.3968%" y="309" width="0.9392%" height="15" fill="rgb(240,136,2)" fg:x="27336" fg:w="284"/><text x="90.6468%" y="319.50"></text></g><g><title>rand::rng::Rng::gen (196 samples, 0.65%)</title><rect x="90.6878%" y="293" width="0.6481%" height="15" fill="rgb(239,18,37)" fg:x="27424" fg:w="196"/><text x="90.9378%" y="303.50"></text></g><g><title>rand::distributions::integer::&lt;impl rand::distributions::distribution::Distribution&lt;u32&gt; for rand::distributions::Standard&gt;::sample (196 samples, 0.65%)</title><rect x="90.6878%" y="277" width="0.6481%" height="15" fill="rgb(218,185,22)" fg:x="27424" fg:w="196"/><text x="90.9378%" y="287.50"></text></g><g><title>&lt;rand::rngs::std::StdRng as rand_core::RngCore&gt;::next_u32 (196 samples, 0.65%)</title><rect x="90.6878%" y="261" width="0.6481%" height="15" fill="rgb(225,218,4)" fg:x="27424" fg:w="196"/><text x="90.9378%" y="271.50"></text></g><g><title>&lt;rand_chacha::chacha::ChaCha12Rng as rand_core::RngCore&gt;::next_u32 (196 samples, 0.65%)</title><rect x="90.6878%" y="245" width="0.6481%" height="15" fill="rgb(230,182,32)" fg:x="27424" fg:w="196"/><text x="90.9378%" y="255.50"></text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u32 (196 samples, 0.65%)</title><rect x="90.6878%" y="229" width="0.6481%" height="15" fill="rgb(242,56,43)" fg:x="27424" fg:w="196"/><text x="90.9378%" y="239.50"></text></g><g><title>rand_core::block::BlockRng&lt;R&gt;::generate_and_set (157 samples, 0.52%)</title><rect x="90.8168%" y="213" width="0.5192%" height="15" fill="rgb(233,99,24)" fg:x="27463" fg:w="157"/><text x="91.0668%" y="223.50"></text></g><g><title>&lt;rand_chacha::chacha::ChaCha12Core as rand_core::block::BlockRngCore&gt;::generate (157 samples, 0.52%)</title><rect x="90.8168%" y="197" width="0.5192%" height="15" fill="rgb(234,209,42)" fg:x="27463" fg:w="157"/><text x="91.0668%" y="207.50"></text></g><g><title>rand_chacha::guts::ChaCha::refill4 (157 samples, 0.52%)</title><rect x="90.8168%" y="181" width="0.5192%" height="15" fill="rgb(227,7,12)" fg:x="27463" fg:w="157"/><text x="91.0668%" y="191.50"></text></g><g><title>rand_chacha::guts::refill_wide::impl_avx2 (156 samples, 0.52%)</title><rect x="90.8201%" y="165" width="0.5159%" height="15" fill="rgb(245,203,43)" fg:x="27464" fg:w="156"/><text x="91.0701%" y="175.50"></text></g><g><title>rand_chacha::guts::refill_wide::fn_impl (154 samples, 0.51%)</title><rect x="90.8267%" y="149" width="0.5093%" height="15" fill="rgb(238,205,33)" fg:x="27466" fg:w="154"/><text x="91.0767%" y="159.50"></text></g><g><title>rand_chacha::guts::refill_wide_impl (154 samples, 0.51%)</title><rect x="90.8267%" y="133" width="0.5093%" height="15" fill="rgb(231,56,7)" fg:x="27466" fg:w="154"/><text x="91.0767%" y="143.50"></text></g><g><title>rand_chacha::guts::undiagonalize (9 samples, 0.03%)</title><rect x="91.3062%" y="117" width="0.0298%" height="15" fill="rgb(244,186,29)" fg:x="27611" fg:w="9"/><text x="91.5562%" y="127.50"></text></g><g><title>[libcuda.so.530.41.03] (52 samples, 0.17%)</title><rect x="91.6171%" y="277" width="0.1720%" height="15" fill="rgb(234,111,31)" fg:x="27705" fg:w="52"/><text x="91.8671%" y="287.50"></text></g><g><title>[libcuda.so.530.41.03] (41 samples, 0.14%)</title><rect x="91.6534%" y="261" width="0.1356%" height="15" fill="rgb(241,149,10)" fg:x="27716" fg:w="41"/><text x="91.9034%" y="271.50"></text></g><g><title>[libcuda.so.530.41.03] (24 samples, 0.08%)</title><rect x="91.7097%" y="245" width="0.0794%" height="15" fill="rgb(249,206,44)" fg:x="27733" fg:w="24"/><text x="91.9597%" y="255.50"></text></g><g><title>dfdx::tensor::cuda::allocate::&lt;impl dfdx::tensor::storage_traits::SampleTensor&lt;E&gt; for dfdx::tensor::cuda::device::Cuda&gt;::try_fill_with_distr (470 samples, 1.55%)</title><rect x="90.2976%" y="453" width="1.5542%" height="15" fill="rgb(251,153,30)" fg:x="27306" fg:w="470"/><text x="90.5476%" y="463.50"></text></g><g><title>cudarc::driver::safe::alloc::&lt;impl cudarc::driver::safe::core::CudaDevice&gt;::htod_copy_into (156 samples, 0.52%)</title><rect x="91.3360%" y="437" width="0.5159%" height="15" fill="rgb(239,152,38)" fg:x="27620" fg:w="156"/><text x="91.5860%" y="447.50"></text></g><g><title>cudarc::driver::result::memcpy_htod_async (156 samples, 0.52%)</title><rect x="91.3360%" y="421" width="0.5159%" height="15" fill="rgb(249,139,47)" fg:x="27620" fg:w="156"/><text x="91.5860%" y="431.50"></text></g><g><title>[libcuda.so.530.41.03] (156 samples, 0.52%)</title><rect x="91.3360%" y="405" width="0.5159%" height="15" fill="rgb(244,64,35)" fg:x="27620" fg:w="156"/><text x="91.5860%" y="415.50"></text></g><g><title>[libcuda.so.530.41.03] (156 samples, 0.52%)</title><rect x="91.3360%" y="389" width="0.5159%" height="15" fill="rgb(216,46,15)" fg:x="27620" fg:w="156"/><text x="91.5860%" y="399.50"></text></g><g><title>[libcuda.so.530.41.03] (156 samples, 0.52%)</title><rect x="91.3360%" y="373" width="0.5159%" height="15" fill="rgb(250,74,19)" fg:x="27620" fg:w="156"/><text x="91.5860%" y="383.50"></text></g><g><title>[libcuda.so.530.41.03] (156 samples, 0.52%)</title><rect x="91.3360%" y="357" width="0.5159%" height="15" fill="rgb(249,42,33)" fg:x="27620" fg:w="156"/><text x="91.5860%" y="367.50"></text></g><g><title>[libcuda.so.530.41.03] (156 samples, 0.52%)</title><rect x="91.3360%" y="341" width="0.5159%" height="15" fill="rgb(242,149,17)" fg:x="27620" fg:w="156"/><text x="91.5860%" y="351.50"></text></g><g><title>[libcuda.so.530.41.03] (156 samples, 0.52%)</title><rect x="91.3360%" y="325" width="0.5159%" height="15" fill="rgb(244,29,21)" fg:x="27620" fg:w="156"/><text x="91.5860%" y="335.50"></text></g><g><title>[libcuda.so.530.41.03] (156 samples, 0.52%)</title><rect x="91.3360%" y="309" width="0.5159%" height="15" fill="rgb(220,130,37)" fg:x="27620" fg:w="156"/><text x="91.5860%" y="319.50"></text></g><g><title>[libcuda.so.530.41.03] (118 samples, 0.39%)</title><rect x="91.4616%" y="293" width="0.3902%" height="15" fill="rgb(211,67,2)" fg:x="27658" fg:w="118"/><text x="91.7116%" y="303.50"></text></g><g><title>clock_gettime (19 samples, 0.06%)</title><rect x="91.7890%" y="277" width="0.0628%" height="15" fill="rgb(235,68,52)" fg:x="27757" fg:w="19"/><text x="92.0390%" y="287.50"></text></g><g><title>__vdso_clock_gettime (19 samples, 0.06%)</title><rect x="91.7890%" y="261" width="0.0628%" height="15" fill="rgb(246,142,3)" fg:x="27757" fg:w="19"/><text x="92.0390%" y="271.50"></text></g><g><title>[[vdso]] (12 samples, 0.04%)</title><rect x="91.8122%" y="245" width="0.0397%" height="15" fill="rgb(241,25,7)" fg:x="27764" fg:w="12"/><text x="92.0622%" y="255.50"></text></g><g><title>dfdx::nn::module::DeviceBuildExt::build_module (476 samples, 1.57%)</title><rect x="90.2811%" y="773" width="1.5741%" height="15" fill="rgb(242,119,39)" fg:x="27301" fg:w="476"/><text x="90.5311%" y="783.50"></text></g><g><title>dfdx::nn::module::BuildOnDevice::build_on_device (476 samples, 1.57%)</title><rect x="90.2811%" y="757" width="1.5741%" height="15" fill="rgb(241,98,45)" fg:x="27301" fg:w="476"/><text x="90.5311%" y="767.50"></text></g><g><title>dfdx::nn::module::BuildOnDevice::try_build_on_device (476 samples, 1.57%)</title><rect x="90.2811%" y="741" width="1.5741%" height="15" fill="rgb(254,28,30)" fg:x="27301" fg:w="476"/><text x="90.5311%" y="751.50"></text></g><g><title>dfdx::nn::build_module::BuildModule::try_build (476 samples, 1.57%)</title><rect x="90.2811%" y="725" width="1.5741%" height="15" fill="rgb(241,142,54)" fg:x="27301" fg:w="476"/><text x="90.5311%" y="735.50"></text></g><g><title>dfdx::nn::impl_module_for_tuples::&lt;impl dfdx::nn::tensor_collection::collection::TensorCollection&lt;E,D&gt; for (M1,M2,M3)&gt;::iter_tensors (476 samples, 1.57%)</title><rect x="90.2811%" y="709" width="1.5741%" height="15" fill="rgb(222,85,15)" fg:x="27301" fg:w="476"/><text x="90.5311%" y="719.50"></text></g><g><title>dfdx::nn::tensor_collection::visitor_impls::&lt;impl dfdx::nn::tensor_collection::collection::ModuleVisitor&lt;T,E,D&gt; for dfdx::nn::tensor_collection::visitor::RecursiveWalker&lt;&lt;&lt;F as dfdx::nn::tensor_collection::visitor::TensorVisitor&lt;E,D&gt;&gt;::Viewer as dfdx::nn::tensor_collection::visitor::TensorViewer&gt;::View&lt;T&gt;,F&gt;&gt;::visit_fields (476 samples, 1.57%)</title><rect x="90.2811%" y="693" width="1.5741%" height="15" fill="rgb(210,85,47)" fg:x="27301" fg:w="476"/><text x="90.5311%" y="703.50"></text></g><g><title>dfdx::nn::tensor_collection::visitor_impls::&lt;impl dfdx::nn::tensor_collection::visitor::ModuleFields&lt;Mod,E,D&gt; for (M1,M2,M3)&gt;::visit_fields (476 samples, 1.57%)</title><rect x="90.2811%" y="677" width="1.5741%" height="15" fill="rgb(224,206,25)" fg:x="27301" fg:w="476"/><text x="90.5311%" y="687.50"></text></g><g><title>dfdx::nn::tensor_collection::visitor_impls::&lt;impl dfdx::nn::tensor_collection::visitor::ModuleFields&lt;Mod,E,D&gt; for dfdx::nn::tensor_collection::visitor::ModuleField&lt;F1,F2,Mod,Field&gt;&gt;::visit_fields (476 samples, 1.57%)</title><rect x="90.2811%" y="661" width="1.5741%" height="15" fill="rgb(243,201,19)" fg:x="27301" fg:w="476"/><text x="90.5311%" y="671.50"></text></g><g><title>dfdx::nn::tensor_collection::visitor_impls::&lt;impl dfdx::nn::tensor_collection::collection::ModuleVisitor&lt;T,E,D&gt; for dfdx::nn::tensor_collection::visitor::RecursiveWalker&lt;&lt;&lt;F as dfdx::nn::tensor_collection::visitor::TensorVisitor&lt;E,D&gt;&gt;::Viewer as dfdx::nn::tensor_collection::visitor::TensorViewer&gt;::View&lt;T&gt;,F&gt;&gt;::visit_module (476 samples, 1.57%)</title><rect x="90.2811%" y="645" width="1.5741%" height="15" fill="rgb(236,59,4)" fg:x="27301" fg:w="476"/><text x="90.5311%" y="655.50"></text></g><g><title>dfdx::nn::impl_module_for_tuples::&lt;impl dfdx::nn::tensor_collection::collection::TensorCollection&lt;E,D&gt; for (M1,M2)&gt;::iter_tensors (471 samples, 1.56%)</title><rect x="90.2976%" y="629" width="1.5575%" height="15" fill="rgb(254,179,45)" fg:x="27306" fg:w="471"/><text x="90.5476%" y="639.50"></text></g><g><title>dfdx::nn::tensor_collection::visitor_impls::&lt;impl dfdx::nn::tensor_collection::collection::ModuleVisitor&lt;T,E,D&gt; for dfdx::nn::tensor_collection::visitor::RecursiveWalker&lt;&lt;&lt;F as dfdx::nn::tensor_collection::visitor::TensorVisitor&lt;E,D&gt;&gt;::Viewer as dfdx::nn::tensor_collection::visitor::TensorViewer&gt;::View&lt;T&gt;,F&gt;&gt;::visit_fields (471 samples, 1.56%)</title><rect x="90.2976%" y="613" width="1.5575%" height="15" fill="rgb(226,14,10)" fg:x="27306" fg:w="471"/><text x="90.5476%" y="623.50"></text></g><g><title>dfdx::nn::tensor_collection::visitor_impls::&lt;impl dfdx::nn::tensor_collection::visitor::ModuleFields&lt;Mod,E,D&gt; for (M1,M2)&gt;::visit_fields (471 samples, 1.56%)</title><rect x="90.2976%" y="597" width="1.5575%" height="15" fill="rgb(244,27,41)" fg:x="27306" fg:w="471"/><text x="90.5476%" y="607.50"></text></g><g><title>dfdx::nn::tensor_collection::visitor_impls::&lt;impl dfdx::nn::tensor_collection::visitor::ModuleFields&lt;Mod,E,D&gt; for dfdx::nn::tensor_collection::visitor::ModuleField&lt;F1,F2,Mod,Field&gt;&gt;::visit_fields (471 samples, 1.56%)</title><rect x="90.2976%" y="581" width="1.5575%" height="15" fill="rgb(235,35,32)" fg:x="27306" fg:w="471"/><text x="90.5476%" y="591.50"></text></g><g><title>dfdx::nn::tensor_collection::visitor_impls::&lt;impl dfdx::nn::tensor_collection::collection::ModuleVisitor&lt;T,E,D&gt; for dfdx::nn::tensor_collection::visitor::RecursiveWalker&lt;&lt;&lt;F as dfdx::nn::tensor_collection::visitor::TensorVisitor&lt;E,D&gt;&gt;::Viewer as dfdx::nn::tensor_collection::visitor::TensorViewer&gt;::View&lt;T&gt;,F&gt;&gt;::visit_module (471 samples, 1.56%)</title><rect x="90.2976%" y="565" width="1.5575%" height="15" fill="rgb(218,68,31)" fg:x="27306" fg:w="471"/><text x="90.5476%" y="575.50"></text></g><g><title>&lt;dfdx::nn::linear::Linear&lt;_,_,E,D&gt; as dfdx::nn::tensor_collection::collection::TensorCollection&lt;E,D&gt;&gt;::iter_tensors (471 samples, 1.56%)</title><rect x="90.2976%" y="549" width="1.5575%" height="15" fill="rgb(207,120,37)" fg:x="27306" fg:w="471"/><text x="90.5476%" y="559.50"></text></g><g><title>dfdx::nn::tensor_collection::visitor_impls::&lt;impl dfdx::nn::tensor_collection::collection::ModuleVisitor&lt;T,E,D&gt; for dfdx::nn::tensor_collection::visitor::RecursiveWalker&lt;&lt;&lt;F as dfdx::nn::tensor_collection::visitor::TensorVisitor&lt;E,D&gt;&gt;::Viewer as dfdx::nn::tensor_collection::visitor::TensorViewer&gt;::View&lt;T&gt;,F&gt;&gt;::visit_fields (471 samples, 1.56%)</title><rect x="90.2976%" y="533" width="1.5575%" height="15" fill="rgb(227,98,0)" fg:x="27306" fg:w="471"/><text x="90.5476%" y="543.50"></text></g><g><title>dfdx::nn::tensor_collection::visitor_impls::&lt;impl dfdx::nn::tensor_collection::visitor::ModuleFields&lt;Mod,E,D&gt; for (M1,M2)&gt;::visit_fields (471 samples, 1.56%)</title><rect x="90.2976%" y="517" width="1.5575%" height="15" fill="rgb(207,7,3)" fg:x="27306" fg:w="471"/><text x="90.5476%" y="527.50"></text></g><g><title>dfdx::nn::tensor_collection::visitor_impls::&lt;impl dfdx::nn::tensor_collection::visitor::ModuleFields&lt;Mod,E,D&gt; for dfdx::nn::tensor_collection::visitor::TensorField&lt;F1,F2,Mod,S,E,D&gt;&gt;::visit_fields (471 samples, 1.56%)</title><rect x="90.2976%" y="501" width="1.5575%" height="15" fill="rgb(206,98,19)" fg:x="27306" fg:w="471"/><text x="90.5476%" y="511.50"></text></g><g><title>dfdx::nn::tensor_collection::visitor_impls::&lt;impl dfdx::nn::tensor_collection::collection::ModuleVisitor&lt;T,E,D&gt; for dfdx::nn::tensor_collection::visitor::RecursiveWalker&lt;&lt;&lt;F as dfdx::nn::tensor_collection::visitor::TensorVisitor&lt;E,D&gt;&gt;::Viewer as dfdx::nn::tensor_collection::visitor::TensorViewer&gt;::View&lt;T&gt;,F&gt;&gt;::visit_tensor (471 samples, 1.56%)</title><rect x="90.2976%" y="485" width="1.5575%" height="15" fill="rgb(217,5,26)" fg:x="27306" fg:w="471"/><text x="90.5476%" y="495.50"></text></g><g><title>&lt;dfdx::nn::build_module::Builder&lt;D&gt; as dfdx::nn::tensor_collection::visitor::TensorVisitor&lt;E,D&gt;&gt;::visit (471 samples, 1.56%)</title><rect x="90.2976%" y="469" width="1.5575%" height="15" fill="rgb(235,190,38)" fg:x="27306" fg:w="471"/><text x="90.5476%" y="479.50"></text></g><g><title>[libcuda.so.530.41.03] (5 samples, 0.02%)</title><rect x="91.8783%" y="485" width="0.0165%" height="15" fill="rgb(247,86,24)" fg:x="27784" fg:w="5"/><text x="92.1283%" y="495.50"></text></g><g><title>[libcuda.so.530.41.03] (5 samples, 0.02%)</title><rect x="91.8783%" y="469" width="0.0165%" height="15" fill="rgb(205,101,16)" fg:x="27784" fg:w="5"/><text x="92.1283%" y="479.50"></text></g><g><title>&lt;dfdx::nn::linear::Bias1D&lt;_,E,D&gt; as dfdx::nn::module::Module&lt;dfdx::tensor::tensor_impls::Tensor&lt;(B,dfdx::shapes::shape::Const&lt;_&gt;),E,D,T&gt;&gt;&gt;::try_forward (10 samples, 0.03%)</title><rect x="91.8684%" y="693" width="0.0331%" height="15" fill="rgb(246,168,33)" fg:x="27781" fg:w="10"/><text x="92.1184%" y="703.50"></text></g><g><title>&lt;dfdx::tensor::tensor_impls::Tensor&lt;S,E,D,LhsTape&gt; as dfdx::tensor_ops::add::TryAdd&lt;dfdx::tensor::tensor_impls::Tensor&lt;S,E,D,R&gt;&gt;&gt;::try_add (10 samples, 0.03%)</title><rect x="91.8684%" y="677" width="0.0331%" height="15" fill="rgb(231,114,1)" fg:x="27781" fg:w="10"/><text x="92.1184%" y="687.50"></text></g><g><title>dfdx::tensor_ops::utilities::ops::try_binary_op (10 samples, 0.03%)</title><rect x="91.8684%" y="661" width="0.0331%" height="15" fill="rgb(207,184,53)" fg:x="27781" fg:w="10"/><text x="92.1184%" y="671.50"></text></g><g><title>dfdx::tensor_ops::utilities::cuda_kernels::&lt;impl dfdx::tensor_ops::utilities::ops::BinaryKernel&lt;K,E&gt; for dfdx::tensor::cuda::device::Cuda&gt;::forward (9 samples, 0.03%)</title><rect x="91.8717%" y="645" width="0.0298%" height="15" fill="rgb(224,95,51)" fg:x="27782" fg:w="9"/><text x="92.1217%" y="655.50"></text></g><g><title>cudarc::driver::safe::ptx::&lt;impl cudarc::driver::safe::core::CudaDevice&gt;::load_ptx (7 samples, 0.02%)</title><rect x="91.8783%" y="629" width="0.0231%" height="15" fill="rgb(212,188,45)" fg:x="27784" fg:w="7"/><text x="92.1283%" y="639.50"></text></g><g><title>cudarc::driver::result::module::load_data (7 samples, 0.02%)</title><rect x="91.8783%" y="613" width="0.0231%" height="15" fill="rgb(223,154,38)" fg:x="27784" fg:w="7"/><text x="92.1283%" y="623.50"></text></g><g><title>[libcuda.so.530.41.03] (7 samples, 0.02%)</title><rect x="91.8783%" y="597" width="0.0231%" height="15" fill="rgb(251,22,52)" fg:x="27784" fg:w="7"/><text x="92.1283%" y="607.50"></text></g><g><title>[libcuda.so.530.41.03] (7 samples, 0.02%)</title><rect x="91.8783%" y="581" width="0.0231%" height="15" fill="rgb(229,209,22)" fg:x="27784" fg:w="7"/><text x="92.1283%" y="591.50"></text></g><g><title>[libcuda.so.530.41.03] (7 samples, 0.02%)</title><rect x="91.8783%" y="565" width="0.0231%" height="15" fill="rgb(234,138,34)" fg:x="27784" fg:w="7"/><text x="92.1283%" y="575.50"></text></g><g><title>[libcuda.so.530.41.03] (7 samples, 0.02%)</title><rect x="91.8783%" y="549" width="0.0231%" height="15" fill="rgb(212,95,11)" fg:x="27784" fg:w="7"/><text x="92.1283%" y="559.50"></text></g><g><title>[libcuda.so.530.41.03] (7 samples, 0.02%)</title><rect x="91.8783%" y="533" width="0.0231%" height="15" fill="rgb(240,179,47)" fg:x="27784" fg:w="7"/><text x="92.1283%" y="543.50"></text></g><g><title>[libcuda.so.530.41.03] (7 samples, 0.02%)</title><rect x="91.8783%" y="517" width="0.0231%" height="15" fill="rgb(240,163,11)" fg:x="27784" fg:w="7"/><text x="92.1283%" y="527.50"></text></g><g><title>[libcuda.so.530.41.03] (7 samples, 0.02%)</title><rect x="91.8783%" y="501" width="0.0231%" height="15" fill="rgb(236,37,12)" fg:x="27784" fg:w="7"/><text x="92.1283%" y="511.50"></text></g><g><title>dfdx::nn::module::ModuleMut::forward_mut (16 samples, 0.05%)</title><rect x="91.8552%" y="773" width="0.0529%" height="15" fill="rgb(232,164,16)" fg:x="27777" fg:w="16"/><text x="92.1052%" y="783.50"></text></g><g><title>dfdx::nn::impl_module_for_tuples::&lt;impl dfdx::nn::module::ModuleMut&lt;Input&gt; for (M1,M2,M3)&gt;::try_forward_mut (16 samples, 0.05%)</title><rect x="91.8552%" y="757" width="0.0529%" height="15" fill="rgb(244,205,15)" fg:x="27777" fg:w="16"/><text x="92.1052%" y="767.50"></text></g><g><title>dfdx::nn::impl_module_for_tuples::&lt;impl dfdx::nn::module::ModuleMut&lt;Input&gt; for (M1,M2)&gt;::try_forward_mut (14 samples, 0.05%)</title><rect x="91.8618%" y="741" width="0.0463%" height="15" fill="rgb(223,117,47)" fg:x="27779" fg:w="14"/><text x="92.1118%" y="751.50"></text></g><g><title>&lt;M as dfdx::nn::module::ModuleMut&lt;T&gt;&gt;::try_forward_mut (14 samples, 0.05%)</title><rect x="91.8618%" y="725" width="0.0463%" height="15" fill="rgb(244,107,35)" fg:x="27779" fg:w="14"/><text x="92.1118%" y="735.50"></text></g><g><title>&lt;dfdx::nn::linear::Linear&lt;_,_,E,D&gt; as dfdx::nn::module::Module&lt;T&gt;&gt;::try_forward (12 samples, 0.04%)</title><rect x="91.8684%" y="709" width="0.0397%" height="15" fill="rgb(205,140,8)" fg:x="27781" fg:w="12"/><text x="92.1184%" y="719.50"></text></g><g><title>crc32fast::baseline::update_fast_16 (6 samples, 0.02%)</title><rect x="91.9312%" y="437" width="0.0198%" height="15" fill="rgb(228,84,46)" fg:x="27800" fg:w="6"/><text x="92.1812%" y="447.50"></text></g><g><title>crc32fast::baseline::update_slow (6 samples, 0.02%)</title><rect x="91.9312%" y="421" width="0.0198%" height="15" fill="rgb(254,188,9)" fg:x="27800" fg:w="6"/><text x="92.1812%" y="431.50"></text></g><g><title>&lt;f32 as dfdx::tensor::numpy::NumpyDtype&gt;::write_endian (14 samples, 0.05%)</title><rect x="91.9081%" y="533" width="0.0463%" height="15" fill="rgb(206,112,54)" fg:x="27793" fg:w="14"/><text x="92.1581%" y="543.50"></text></g><g><title>std::io::Write::write_all (13 samples, 0.04%)</title><rect x="91.9114%" y="517" width="0.0430%" height="15" fill="rgb(216,84,49)" fg:x="27794" fg:w="13"/><text x="92.1614%" y="527.50"></text></g><g><title>zip::write::&lt;impl std::io::Write for zip::write::zip_writer::ZipWriter&lt;W&gt;&gt;::write (12 samples, 0.04%)</title><rect x="91.9147%" y="501" width="0.0397%" height="15" fill="rgb(214,194,35)" fg:x="27795" fg:w="12"/><text x="92.1647%" y="511.50"></text></g><g><title>zip::write::ZipWriterStats::update (9 samples, 0.03%)</title><rect x="91.9246%" y="485" width="0.0298%" height="15" fill="rgb(249,28,3)" fg:x="27798" fg:w="9"/><text x="92.1746%" y="495.50"></text></g><g><title>crc32fast::Hasher::update (8 samples, 0.03%)</title><rect x="91.9279%" y="469" width="0.0265%" height="15" fill="rgb(222,56,52)" fg:x="27799" fg:w="8"/><text x="92.1779%" y="479.50"></text></g><g><title>crc32fast::specialized::pclmulqdq::State::update (7 samples, 0.02%)</title><rect x="91.9312%" y="453" width="0.0231%" height="15" fill="rgb(245,217,50)" fg:x="27800" fg:w="7"/><text x="92.1812%" y="463.50"></text></g><g><title>&lt;dfdx::nn::linear::Linear&lt;_,_,E,D&gt; as dfdx::nn::tensor_collection::collection::TensorCollection&lt;E,D&gt;&gt;::iter_tensors (20 samples, 0.07%)</title><rect x="91.9081%" y="661" width="0.0661%" height="15" fill="rgb(213,201,24)" fg:x="27793" fg:w="20"/><text x="92.1581%" y="671.50"></text></g><g><title>dfdx::nn::tensor_collection::visitor_impls::&lt;impl dfdx::nn::tensor_collection::collection::ModuleVisitor&lt;T,E,D&gt; for dfdx::nn::tensor_collection::visitor::RecursiveWalker&lt;&lt;&lt;F as dfdx::nn::tensor_collection::visitor::TensorVisitor&lt;E,D&gt;&gt;::Viewer as dfdx::nn::tensor_collection::visitor::TensorViewer&gt;::View&lt;T&gt;,F&gt;&gt;::visit_fields (20 samples, 0.07%)</title><rect x="91.9081%" y="645" width="0.0661%" height="15" fill="rgb(248,116,28)" fg:x="27793" fg:w="20"/><text x="92.1581%" y="655.50"></text></g><g><title>dfdx::nn::tensor_collection::visitor_impls::&lt;impl dfdx::nn::tensor_collection::visitor::ModuleFields&lt;Mod,E,D&gt; for (M1,M2)&gt;::visit_fields (20 samples, 0.07%)</title><rect x="91.9081%" y="629" width="0.0661%" height="15" fill="rgb(219,72,43)" fg:x="27793" fg:w="20"/><text x="92.1581%" y="639.50"></text></g><g><title>dfdx::nn::tensor_collection::visitor_impls::&lt;impl dfdx::nn::tensor_collection::visitor::ModuleFields&lt;Mod,E,D&gt; for dfdx::nn::tensor_collection::visitor::TensorField&lt;F1,F2,Mod,S,E,D&gt;&gt;::visit_fields (20 samples, 0.07%)</title><rect x="91.9081%" y="613" width="0.0661%" height="15" fill="rgb(209,138,14)" fg:x="27793" fg:w="20"/><text x="92.1581%" y="623.50"></text></g><g><title>dfdx::nn::tensor_collection::visitor_impls::&lt;impl dfdx::nn::tensor_collection::collection::ModuleVisitor&lt;T,E,D&gt; for dfdx::nn::tensor_collection::visitor::RecursiveWalker&lt;&lt;&lt;F as dfdx::nn::tensor_collection::visitor::TensorVisitor&lt;E,D&gt;&gt;::Viewer as dfdx::nn::tensor_collection::visitor::TensorViewer&gt;::View&lt;T&gt;,F&gt;&gt;::visit_tensor (20 samples, 0.07%)</title><rect x="91.9081%" y="597" width="0.0661%" height="15" fill="rgb(222,18,33)" fg:x="27793" fg:w="20"/><text x="92.1581%" y="607.50"></text></g><g><title>dfdx::nn::npz::&lt;impl dfdx::nn::tensor_collection::visitor::TensorVisitor&lt;E,D&gt; for zip::write::zip_writer::ZipWriter&lt;W&gt;&gt;::visit (20 samples, 0.07%)</title><rect x="91.9081%" y="581" width="0.0661%" height="15" fill="rgb(213,199,7)" fg:x="27793" fg:w="20"/><text x="92.1581%" y="591.50"></text></g><g><title>dfdx::tensor::numpy::&lt;impl dfdx::tensor::tensor_impls::Tensor&lt;S,E,D,T&gt;&gt;::write_to_npz (20 samples, 0.07%)</title><rect x="91.9081%" y="565" width="0.0661%" height="15" fill="rgb(250,110,10)" fg:x="27793" fg:w="20"/><text x="92.1581%" y="575.50"></text></g><g><title>dfdx::tensor::numpy::&lt;impl dfdx::tensor::tensor_impls::Tensor&lt;S,E,D,T&gt;&gt;::write_to (20 samples, 0.07%)</title><rect x="91.9081%" y="549" width="0.0661%" height="15" fill="rgb(248,123,6)" fg:x="27793" fg:w="20"/><text x="92.1581%" y="559.50"></text></g><g><title>dfdx::tensor::cuda::allocate::&lt;impl dfdx::tensor::storage_traits::CopySlice&lt;E&gt; for dfdx::tensor::cuda::device::Cuda&gt;::copy_into (6 samples, 0.02%)</title><rect x="91.9544%" y="533" width="0.0198%" height="15" fill="rgb(206,91,31)" fg:x="27807" fg:w="6"/><text x="92.2044%" y="543.50"></text></g><g><title>cudarc::driver::safe::alloc::&lt;impl cudarc::driver::safe::core::CudaDevice&gt;::dtoh_sync_copy_into (6 samples, 0.02%)</title><rect x="91.9544%" y="517" width="0.0198%" height="15" fill="rgb(211,154,13)" fg:x="27807" fg:w="6"/><text x="92.2044%" y="527.50"></text></g><g><title>cudarc::driver::result::memcpy_dtoh_async (6 samples, 0.02%)</title><rect x="91.9544%" y="501" width="0.0198%" height="15" fill="rgb(225,148,7)" fg:x="27807" fg:w="6"/><text x="92.2044%" y="511.50"></text></g><g><title>[libcuda.so.530.41.03] (6 samples, 0.02%)</title><rect x="91.9544%" y="485" width="0.0198%" height="15" fill="rgb(220,160,43)" fg:x="27807" fg:w="6"/><text x="92.2044%" y="495.50"></text></g><g><title>[libcuda.so.530.41.03] (6 samples, 0.02%)</title><rect x="91.9544%" y="469" width="0.0198%" height="15" fill="rgb(213,52,39)" fg:x="27807" fg:w="6"/><text x="92.2044%" y="479.50"></text></g><g><title>[libcuda.so.530.41.03] (6 samples, 0.02%)</title><rect x="91.9544%" y="453" width="0.0198%" height="15" fill="rgb(243,137,7)" fg:x="27807" fg:w="6"/><text x="92.2044%" y="463.50"></text></g><g><title>[libcuda.so.530.41.03] (6 samples, 0.02%)</title><rect x="91.9544%" y="437" width="0.0198%" height="15" fill="rgb(230,79,13)" fg:x="27807" fg:w="6"/><text x="92.2044%" y="447.50"></text></g><g><title>[libcuda.so.530.41.03] (6 samples, 0.02%)</title><rect x="91.9544%" y="421" width="0.0198%" height="15" fill="rgb(247,105,23)" fg:x="27807" fg:w="6"/><text x="92.2044%" y="431.50"></text></g><g><title>[libcuda.so.530.41.03] (6 samples, 0.02%)</title><rect x="91.9544%" y="405" width="0.0198%" height="15" fill="rgb(223,179,41)" fg:x="27807" fg:w="6"/><text x="92.2044%" y="415.50"></text></g><g><title>[libcuda.so.530.41.03] (6 samples, 0.02%)</title><rect x="91.9544%" y="389" width="0.0198%" height="15" fill="rgb(218,9,34)" fg:x="27807" fg:w="6"/><text x="92.2044%" y="399.50"></text></g><g><title>[libcuda.so.530.41.03] (6 samples, 0.02%)</title><rect x="91.9544%" y="373" width="0.0198%" height="15" fill="rgb(222,106,8)" fg:x="27807" fg:w="6"/><text x="92.2044%" y="383.50"></text></g><g><title>[libcuda.so.530.41.03] (5 samples, 0.02%)</title><rect x="91.9577%" y="357" width="0.0165%" height="15" fill="rgb(211,220,0)" fg:x="27808" fg:w="5"/><text x="92.2077%" y="367.50"></text></g><g><title>core::f32::&lt;impl f32&gt;::to_le_bytes (13 samples, 0.04%)</title><rect x="92.1693%" y="437" width="0.0430%" height="15" fill="rgb(229,52,16)" fg:x="27872" fg:w="13"/><text x="92.4193%" y="447.50"></text></g><g><title>core::num::&lt;impl u32&gt;::to_le_bytes (13 samples, 0.04%)</title><rect x="92.1693%" y="421" width="0.0430%" height="15" fill="rgb(212,155,18)" fg:x="27872" fg:w="13"/><text x="92.4193%" y="431.50"></text></g><g><title>core::num::&lt;impl u32&gt;::to_ne_bytes (13 samples, 0.04%)</title><rect x="92.1693%" y="405" width="0.0430%" height="15" fill="rgb(242,21,14)" fg:x="27872" fg:w="13"/><text x="92.4193%" y="415.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (42 samples, 0.14%)</title><rect x="92.6951%" y="421" width="0.1389%" height="15" fill="rgb(222,19,48)" fg:x="28031" fg:w="42"/><text x="92.9451%" y="431.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (42 samples, 0.14%)</title><rect x="92.6951%" y="405" width="0.1389%" height="15" fill="rgb(232,45,27)" fg:x="28031" fg:w="42"/><text x="92.9451%" y="415.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (42 samples, 0.14%)</title><rect x="92.6951%" y="389" width="0.1389%" height="15" fill="rgb(249,103,42)" fg:x="28031" fg:w="42"/><text x="92.9451%" y="399.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (42 samples, 0.14%)</title><rect x="92.6951%" y="373" width="0.1389%" height="15" fill="rgb(246,81,33)" fg:x="28031" fg:w="42"/><text x="92.9451%" y="383.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (42 samples, 0.14%)</title><rect x="92.6951%" y="357" width="0.1389%" height="15" fill="rgb(252,33,42)" fg:x="28031" fg:w="42"/><text x="92.9451%" y="367.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (42 samples, 0.14%)</title><rect x="92.6951%" y="341" width="0.1389%" height="15" fill="rgb(209,212,41)" fg:x="28031" fg:w="42"/><text x="92.9451%" y="351.50"></text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::write_cold (5 samples, 0.02%)</title><rect x="93.7798%" y="373" width="0.0165%" height="15" fill="rgb(207,154,6)" fg:x="28359" fg:w="5"/><text x="94.0298%" y="383.50"></text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::flush_buf (5 samples, 0.02%)</title><rect x="93.7798%" y="357" width="0.0165%" height="15" fill="rgb(223,64,47)" fg:x="28359" fg:w="5"/><text x="94.0298%" y="367.50"></text></g><g><title>std::os::unix::net::datagram::UnixDatagram::send (4 samples, 0.01%)</title><rect x="93.7831%" y="341" width="0.0132%" height="15" fill="rgb(211,161,38)" fg:x="28360" fg:w="4"/><text x="94.0331%" y="351.50"></text></g><g><title>std::sys::unix::net::Socket::write (4 samples, 0.01%)</title><rect x="93.7831%" y="325" width="0.0132%" height="15" fill="rgb(219,138,40)" fg:x="28360" fg:w="4"/><text x="94.0331%" y="335.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (4 samples, 0.01%)</title><rect x="93.7831%" y="309" width="0.0132%" height="15" fill="rgb(241,228,46)" fg:x="28360" fg:w="4"/><text x="94.0331%" y="319.50"></text></g><g><title>write (4 samples, 0.01%)</title><rect x="93.7831%" y="293" width="0.0132%" height="15" fill="rgb(223,209,38)" fg:x="28360" fg:w="4"/><text x="94.0331%" y="303.50"></text></g><g><title>[libc.so.6] (4 samples, 0.01%)</title><rect x="93.7831%" y="277" width="0.0132%" height="15" fill="rgb(236,164,45)" fg:x="28360" fg:w="4"/><text x="94.0331%" y="287.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write (251 samples, 0.83%)</title><rect x="93.4821%" y="405" width="0.8300%" height="15" fill="rgb(231,15,5)" fg:x="28269" fg:w="251"/><text x="93.7321%" y="415.50"></text></g><g><title>&lt;std::io::buffered::bufwriter::BufWriter&lt;W&gt; as std::io::Write&gt;::write (251 samples, 0.83%)</title><rect x="93.4821%" y="389" width="0.8300%" height="15" fill="rgb(252,35,15)" fg:x="28269" fg:w="251"/><text x="93.7321%" y="399.50"></text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::write_to_buffer_unchecked (156 samples, 0.52%)</title><rect x="93.7963%" y="373" width="0.5159%" height="15" fill="rgb(248,181,18)" fg:x="28364" fg:w="156"/><text x="94.0463%" y="383.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (156 samples, 0.52%)</title><rect x="93.7963%" y="357" width="0.5159%" height="15" fill="rgb(233,39,42)" fg:x="28364" fg:w="156"/><text x="94.0463%" y="367.50"></text></g><g><title>[libc.so.6] (112 samples, 0.37%)</title><rect x="93.9418%" y="341" width="0.3704%" height="15" fill="rgb(238,110,33)" fg:x="28408" fg:w="112"/><text x="94.1918%" y="351.50"></text></g><g><title>zip::write::GenericZipWriter&lt;W&gt;::ref_mut (37 samples, 0.12%)</title><rect x="94.3122%" y="405" width="0.1224%" height="15" fill="rgb(233,195,10)" fg:x="28520" fg:w="37"/><text x="94.5622%" y="415.50"></text></g><g><title>crc32fast::baseline::update_fast_16 (376 samples, 1.24%)</title><rect x="94.7354%" y="357" width="1.2434%" height="15" fill="rgb(254,105,3)" fg:x="28648" fg:w="376"/><text x="94.9854%" y="367.50"></text></g><g><title>crc32fast::baseline::update_slow (335 samples, 1.11%)</title><rect x="94.8710%" y="341" width="1.1078%" height="15" fill="rgb(221,225,9)" fg:x="28689" fg:w="335"/><text x="95.1210%" y="351.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (117 samples, 0.39%)</title><rect x="95.5919%" y="325" width="0.3869%" height="15" fill="rgb(224,227,45)" fg:x="28907" fg:w="117"/><text x="95.8419%" y="335.50"></text></g><g><title>&lt;f32 as dfdx::tensor::numpy::NumpyDtype&gt;::write_endian (1,228 samples, 4.06%)</title><rect x="92.1131%" y="453" width="4.0608%" height="15" fill="rgb(229,198,43)" fg:x="27855" fg:w="1228"/><text x="92.3631%" y="463.50">&lt;f32..</text></g><g><title>std::io::Write::write_all (1,198 samples, 3.96%)</title><rect x="92.2123%" y="437" width="3.9616%" height="15" fill="rgb(206,209,35)" fg:x="27885" fg:w="1198"/><text x="92.4623%" y="447.50">std:..</text></g><g><title>zip::write::&lt;impl std::io::Write for zip::write::zip_writer::ZipWriter&lt;W&gt;&gt;::write (1,010 samples, 3.34%)</title><rect x="92.8340%" y="421" width="3.3399%" height="15" fill="rgb(245,195,53)" fg:x="28073" fg:w="1010"/><text x="93.0840%" y="431.50">zip..</text></g><g><title>zip::write::ZipWriterStats::update (526 samples, 1.74%)</title><rect x="94.4345%" y="405" width="1.7394%" height="15" fill="rgb(240,92,26)" fg:x="28557" fg:w="526"/><text x="94.6845%" y="415.50"></text></g><g><title>crc32fast::Hasher::update (478 samples, 1.58%)</title><rect x="94.5933%" y="389" width="1.5807%" height="15" fill="rgb(207,40,23)" fg:x="28605" fg:w="478"/><text x="94.8433%" y="399.50"></text></g><g><title>crc32fast::specialized::pclmulqdq::State::update (435 samples, 1.44%)</title><rect x="94.7354%" y="373" width="1.4385%" height="15" fill="rgb(223,111,35)" fg:x="28648" fg:w="435"/><text x="94.9854%" y="383.50"></text></g><g><title>crc32fast::specialized::pclmulqdq::calculate (59 samples, 0.20%)</title><rect x="95.9788%" y="357" width="0.1951%" height="15" fill="rgb(229,147,28)" fg:x="29024" fg:w="59"/><text x="96.2288%" y="367.50"></text></g><g><title>dfdx::nn::npz::SaveToNpz::save (1,686 samples, 5.58%)</title><rect x="91.9081%" y="773" width="5.5754%" height="15" fill="rgb(211,29,28)" fg:x="27793" fg:w="1686"/><text x="92.1581%" y="783.50">dfdx::n..</text></g><g><title>dfdx::nn::npz::SaveToNpz::write (1,686 samples, 5.58%)</title><rect x="91.9081%" y="757" width="5.5754%" height="15" fill="rgb(228,72,33)" fg:x="27793" fg:w="1686"/><text x="92.1581%" y="767.50">dfdx::n..</text></g><g><title>dfdx::nn::impl_module_for_tuples::&lt;impl dfdx::nn::tensor_collection::collection::TensorCollection&lt;E,D&gt; for (M1,M2,M3)&gt;::iter_tensors (1,686 samples, 5.58%)</title><rect x="91.9081%" y="741" width="5.5754%" height="15" fill="rgb(205,214,31)" fg:x="27793" fg:w="1686"/><text x="92.1581%" y="751.50">dfdx::n..</text></g><g><title>dfdx::nn::tensor_collection::visitor_impls::&lt;impl dfdx::nn::tensor_collection::collection::ModuleVisitor&lt;T,E,D&gt; for dfdx::nn::tensor_collection::visitor::RecursiveWalker&lt;&lt;&lt;F as dfdx::nn::tensor_collection::visitor::TensorVisitor&lt;E,D&gt;&gt;::Viewer as dfdx::nn::tensor_collection::visitor::TensorViewer&gt;::View&lt;T&gt;,F&gt;&gt;::visit_fields (1,686 samples, 5.58%)</title><rect x="91.9081%" y="725" width="5.5754%" height="15" fill="rgb(224,111,15)" fg:x="27793" fg:w="1686"/><text x="92.1581%" y="735.50">dfdx::n..</text></g><g><title>dfdx::nn::tensor_collection::visitor_impls::&lt;impl dfdx::nn::tensor_collection::visitor::ModuleFields&lt;Mod,E,D&gt; for (M1,M2,M3)&gt;::visit_fields (1,686 samples, 5.58%)</title><rect x="91.9081%" y="709" width="5.5754%" height="15" fill="rgb(253,21,26)" fg:x="27793" fg:w="1686"/><text x="92.1581%" y="719.50">dfdx::n..</text></g><g><title>dfdx::nn::tensor_collection::visitor_impls::&lt;impl dfdx::nn::tensor_collection::visitor::ModuleFields&lt;Mod,E,D&gt; for dfdx::nn::tensor_collection::visitor::ModuleField&lt;F1,F2,Mod,Field&gt;&gt;::visit_fields (1,686 samples, 5.58%)</title><rect x="91.9081%" y="693" width="5.5754%" height="15" fill="rgb(245,139,43)" fg:x="27793" fg:w="1686"/><text x="92.1581%" y="703.50">dfdx::n..</text></g><g><title>dfdx::nn::tensor_collection::visitor_impls::&lt;impl dfdx::nn::tensor_collection::collection::ModuleVisitor&lt;T,E,D&gt; for dfdx::nn::tensor_collection::visitor::RecursiveWalker&lt;&lt;&lt;F as dfdx::nn::tensor_collection::visitor::TensorVisitor&lt;E,D&gt;&gt;::Viewer as dfdx::nn::tensor_collection::visitor::TensorViewer&gt;::View&lt;T&gt;,F&gt;&gt;::visit_module (1,686 samples, 5.58%)</title><rect x="91.9081%" y="677" width="5.5754%" height="15" fill="rgb(252,170,7)" fg:x="27793" fg:w="1686"/><text x="92.1581%" y="687.50">dfdx::n..</text></g><g><title>dfdx::nn::impl_module_for_tuples::&lt;impl dfdx::nn::tensor_collection::collection::TensorCollection&lt;E,D&gt; for (M1,M2)&gt;::iter_tensors (1,666 samples, 5.51%)</title><rect x="91.9742%" y="661" width="5.5093%" height="15" fill="rgb(231,118,14)" fg:x="27813" fg:w="1666"/><text x="92.2242%" y="671.50">dfdx::n..</text></g><g><title>dfdx::nn::tensor_collection::visitor_impls::&lt;impl dfdx::nn::tensor_collection::collection::ModuleVisitor&lt;T,E,D&gt; for dfdx::nn::tensor_collection::visitor::RecursiveWalker&lt;&lt;&lt;F as dfdx::nn::tensor_collection::visitor::TensorVisitor&lt;E,D&gt;&gt;::Viewer as dfdx::nn::tensor_collection::visitor::TensorViewer&gt;::View&lt;T&gt;,F&gt;&gt;::visit_fields (1,666 samples, 5.51%)</title><rect x="91.9742%" y="645" width="5.5093%" height="15" fill="rgb(238,83,0)" fg:x="27813" fg:w="1666"/><text x="92.2242%" y="655.50">dfdx::n..</text></g><g><title>dfdx::nn::tensor_collection::visitor_impls::&lt;impl dfdx::nn::tensor_collection::visitor::ModuleFields&lt;Mod,E,D&gt; for (M1,M2)&gt;::visit_fields (1,666 samples, 5.51%)</title><rect x="91.9742%" y="629" width="5.5093%" height="15" fill="rgb(221,39,39)" fg:x="27813" fg:w="1666"/><text x="92.2242%" y="639.50">dfdx::n..</text></g><g><title>dfdx::nn::tensor_collection::visitor_impls::&lt;impl dfdx::nn::tensor_collection::visitor::ModuleFields&lt;Mod,E,D&gt; for dfdx::nn::tensor_collection::visitor::ModuleField&lt;F1,F2,Mod,Field&gt;&gt;::visit_fields (1,666 samples, 5.51%)</title><rect x="91.9742%" y="613" width="5.5093%" height="15" fill="rgb(222,119,46)" fg:x="27813" fg:w="1666"/><text x="92.2242%" y="623.50">dfdx::n..</text></g><g><title>dfdx::nn::tensor_collection::visitor_impls::&lt;impl dfdx::nn::tensor_collection::collection::ModuleVisitor&lt;T,E,D&gt; for dfdx::nn::tensor_collection::visitor::RecursiveWalker&lt;&lt;&lt;F as dfdx::nn::tensor_collection::visitor::TensorVisitor&lt;E,D&gt;&gt;::Viewer as dfdx::nn::tensor_collection::visitor::TensorViewer&gt;::View&lt;T&gt;,F&gt;&gt;::visit_module (1,666 samples, 5.51%)</title><rect x="91.9742%" y="597" width="5.5093%" height="15" fill="rgb(222,165,49)" fg:x="27813" fg:w="1666"/><text x="92.2242%" y="607.50">dfdx::n..</text></g><g><title>&lt;dfdx::nn::linear::Linear&lt;_,_,E,D&gt; as dfdx::nn::tensor_collection::collection::TensorCollection&lt;E,D&gt;&gt;::iter_tensors (1,666 samples, 5.51%)</title><rect x="91.9742%" y="581" width="5.5093%" height="15" fill="rgb(219,113,52)" fg:x="27813" fg:w="1666"/><text x="92.2242%" y="591.50">&lt;dfdx::..</text></g><g><title>dfdx::nn::tensor_collection::visitor_impls::&lt;impl dfdx::nn::tensor_collection::collection::ModuleVisitor&lt;T,E,D&gt; for dfdx::nn::tensor_collection::visitor::RecursiveWalker&lt;&lt;&lt;F as dfdx::nn::tensor_collection::visitor::TensorVisitor&lt;E,D&gt;&gt;::Viewer as dfdx::nn::tensor_collection::visitor::TensorViewer&gt;::View&lt;T&gt;,F&gt;&gt;::visit_fields (1,666 samples, 5.51%)</title><rect x="91.9742%" y="565" width="5.5093%" height="15" fill="rgb(214,7,15)" fg:x="27813" fg:w="1666"/><text x="92.2242%" y="575.50">dfdx::n..</text></g><g><title>dfdx::nn::tensor_collection::visitor_impls::&lt;impl dfdx::nn::tensor_collection::visitor::ModuleFields&lt;Mod,E,D&gt; for (M1,M2)&gt;::visit_fields (1,666 samples, 5.51%)</title><rect x="91.9742%" y="549" width="5.5093%" height="15" fill="rgb(235,32,4)" fg:x="27813" fg:w="1666"/><text x="92.2242%" y="559.50">dfdx::n..</text></g><g><title>dfdx::nn::tensor_collection::visitor_impls::&lt;impl dfdx::nn::tensor_collection::visitor::ModuleFields&lt;Mod,E,D&gt; for dfdx::nn::tensor_collection::visitor::TensorField&lt;F1,F2,Mod,S,E,D&gt;&gt;::visit_fields (1,666 samples, 5.51%)</title><rect x="91.9742%" y="533" width="5.5093%" height="15" fill="rgb(238,90,54)" fg:x="27813" fg:w="1666"/><text x="92.2242%" y="543.50">dfdx::n..</text></g><g><title>dfdx::nn::tensor_collection::visitor_impls::&lt;impl dfdx::nn::tensor_collection::collection::ModuleVisitor&lt;T,E,D&gt; for dfdx::nn::tensor_collection::visitor::RecursiveWalker&lt;&lt;&lt;F as dfdx::nn::tensor_collection::visitor::TensorVisitor&lt;E,D&gt;&gt;::Viewer as dfdx::nn::tensor_collection::visitor::TensorViewer&gt;::View&lt;T&gt;,F&gt;&gt;::visit_tensor (1,666 samples, 5.51%)</title><rect x="91.9742%" y="517" width="5.5093%" height="15" fill="rgb(213,208,19)" fg:x="27813" fg:w="1666"/><text x="92.2242%" y="527.50">dfdx::n..</text></g><g><title>dfdx::nn::npz::&lt;impl dfdx::nn::tensor_collection::visitor::TensorVisitor&lt;E,D&gt; for zip::write::zip_writer::ZipWriter&lt;W&gt;&gt;::visit (1,666 samples, 5.51%)</title><rect x="91.9742%" y="501" width="5.5093%" height="15" fill="rgb(233,156,4)" fg:x="27813" fg:w="1666"/><text x="92.2242%" y="511.50">dfdx::n..</text></g><g><title>dfdx::tensor::numpy::&lt;impl dfdx::tensor::tensor_impls::Tensor&lt;S,E,D,T&gt;&gt;::write_to_npz (1,666 samples, 5.51%)</title><rect x="91.9742%" y="485" width="5.5093%" height="15" fill="rgb(207,194,5)" fg:x="27813" fg:w="1666"/><text x="92.2242%" y="495.50">dfdx::t..</text></g><g><title>dfdx::tensor::numpy::&lt;impl dfdx::tensor::tensor_impls::Tensor&lt;S,E,D,T&gt;&gt;::write_to (1,666 samples, 5.51%)</title><rect x="91.9742%" y="469" width="5.5093%" height="15" fill="rgb(206,111,30)" fg:x="27813" fg:w="1666"/><text x="92.2242%" y="479.50">dfdx::t..</text></g><g><title>dfdx::tensor::cuda::allocate::&lt;impl dfdx::tensor::storage_traits::CopySlice&lt;E&gt; for dfdx::tensor::cuda::device::Cuda&gt;::copy_into (396 samples, 1.31%)</title><rect x="96.1739%" y="453" width="1.3095%" height="15" fill="rgb(243,70,54)" fg:x="29083" fg:w="396"/><text x="96.4239%" y="463.50"></text></g><g><title>cudarc::driver::safe::alloc::&lt;impl cudarc::driver::safe::core::CudaDevice&gt;::dtoh_sync_copy_into (396 samples, 1.31%)</title><rect x="96.1739%" y="437" width="1.3095%" height="15" fill="rgb(242,28,8)" fg:x="29083" fg:w="396"/><text x="96.4239%" y="447.50"></text></g><g><title>cudarc::driver::result::memcpy_dtoh_async (396 samples, 1.31%)</title><rect x="96.1739%" y="421" width="1.3095%" height="15" fill="rgb(219,106,18)" fg:x="29083" fg:w="396"/><text x="96.4239%" y="431.50"></text></g><g><title>[libcuda.so.530.41.03] (396 samples, 1.31%)</title><rect x="96.1739%" y="405" width="1.3095%" height="15" fill="rgb(244,222,10)" fg:x="29083" fg:w="396"/><text x="96.4239%" y="415.50"></text></g><g><title>[libcuda.so.530.41.03] (396 samples, 1.31%)</title><rect x="96.1739%" y="389" width="1.3095%" height="15" fill="rgb(236,179,52)" fg:x="29083" fg:w="396"/><text x="96.4239%" y="399.50"></text></g><g><title>[libcuda.so.530.41.03] (396 samples, 1.31%)</title><rect x="96.1739%" y="373" width="1.3095%" height="15" fill="rgb(213,23,39)" fg:x="29083" fg:w="396"/><text x="96.4239%" y="383.50"></text></g><g><title>[libcuda.so.530.41.03] (396 samples, 1.31%)</title><rect x="96.1739%" y="357" width="1.3095%" height="15" fill="rgb(238,48,10)" fg:x="29083" fg:w="396"/><text x="96.4239%" y="367.50"></text></g><g><title>[libcuda.so.530.41.03] (396 samples, 1.31%)</title><rect x="96.1739%" y="341" width="1.3095%" height="15" fill="rgb(251,196,23)" fg:x="29083" fg:w="396"/><text x="96.4239%" y="351.50"></text></g><g><title>[libcuda.so.530.41.03] (396 samples, 1.31%)</title><rect x="96.1739%" y="325" width="1.3095%" height="15" fill="rgb(250,152,24)" fg:x="29083" fg:w="396"/><text x="96.4239%" y="335.50"></text></g><g><title>[libcuda.so.530.41.03] (396 samples, 1.31%)</title><rect x="96.1739%" y="309" width="1.3095%" height="15" fill="rgb(209,150,17)" fg:x="29083" fg:w="396"/><text x="96.4239%" y="319.50"></text></g><g><title>[libcuda.so.530.41.03] (396 samples, 1.31%)</title><rect x="96.1739%" y="293" width="1.3095%" height="15" fill="rgb(234,202,34)" fg:x="29083" fg:w="396"/><text x="96.4239%" y="303.50"></text></g><g><title>[libcuda.so.530.41.03] (395 samples, 1.31%)</title><rect x="96.1772%" y="277" width="1.3062%" height="15" fill="rgb(253,148,53)" fg:x="29084" fg:w="395"/><text x="96.4272%" y="287.50"></text></g><g><title>&lt;dfdx::tensor::tensor_impls::Tensor&lt;S,E,D,T&gt; as dfdx::tensor_ops::sum_to::SumTo&gt;::try_sum::{{closure}} (6 samples, 0.02%)</title><rect x="97.5000%" y="693" width="0.0198%" height="15" fill="rgb(218,129,16)" fg:x="29484" fg:w="6"/><text x="97.7500%" y="703.50"></text></g><g><title>dfdx::tensor_ops::sum_to::cuda_kernel::&lt;impl dfdx::tensor_ops::sum_to::SumKernel&lt;E&gt; for dfdx::tensor::cuda::device::Cuda&gt;::backward (6 samples, 0.02%)</title><rect x="97.5000%" y="677" width="0.0198%" height="15" fill="rgb(216,85,19)" fg:x="29484" fg:w="6"/><text x="97.7500%" y="687.50"></text></g><g><title>cudarc::driver::safe::alloc::&lt;impl cudarc::driver::safe::core::CudaDevice&gt;::htod_copy (4 samples, 0.01%)</title><rect x="97.5066%" y="661" width="0.0132%" height="15" fill="rgb(235,228,7)" fg:x="29486" fg:w="4"/><text x="97.7566%" y="671.50"></text></g><g><title>cudarc::driver::safe::alloc::&lt;impl cudarc::driver::safe::core::CudaDevice&gt;::alloc (4 samples, 0.01%)</title><rect x="97.5298%" y="645" width="0.0132%" height="15" fill="rgb(245,175,0)" fg:x="29493" fg:w="4"/><text x="97.7798%" y="655.50"></text></g><g><title>cudarc::driver::result::malloc_async (4 samples, 0.01%)</title><rect x="97.5298%" y="629" width="0.0132%" height="15" fill="rgb(208,168,36)" fg:x="29493" fg:w="4"/><text x="97.7798%" y="639.50"></text></g><g><title>[libcuda.so.530.41.03] (4 samples, 0.01%)</title><rect x="97.5298%" y="613" width="0.0132%" height="15" fill="rgb(246,171,24)" fg:x="29493" fg:w="4"/><text x="97.7798%" y="623.50"></text></g><g><title>[libcuda.so.530.41.03] (4 samples, 0.01%)</title><rect x="97.5298%" y="597" width="0.0132%" height="15" fill="rgb(215,142,24)" fg:x="29493" fg:w="4"/><text x="97.7798%" y="607.50"></text></g><g><title>[libcuda.so.530.41.03] (4 samples, 0.01%)</title><rect x="97.5298%" y="581" width="0.0132%" height="15" fill="rgb(250,187,7)" fg:x="29493" fg:w="4"/><text x="97.7798%" y="591.50"></text></g><g><title>cudarc::driver::safe::alloc::&lt;impl cudarc::driver::safe::core::CudaDevice&gt;::htod_copy (11 samples, 0.04%)</title><rect x="97.5298%" y="661" width="0.0364%" height="15" fill="rgb(228,66,33)" fg:x="29493" fg:w="11"/><text x="97.7798%" y="671.50"></text></g><g><title>cudarc::driver::safe::alloc::&lt;impl cudarc::driver::safe::core::CudaDevice&gt;::htod_copy_into (7 samples, 0.02%)</title><rect x="97.5430%" y="645" width="0.0231%" height="15" fill="rgb(234,215,21)" fg:x="29497" fg:w="7"/><text x="97.7930%" y="655.50"></text></g><g><title>cudarc::driver::result::memcpy_htod_async (7 samples, 0.02%)</title><rect x="97.5430%" y="629" width="0.0231%" height="15" fill="rgb(222,191,20)" fg:x="29497" fg:w="7"/><text x="97.7930%" y="639.50"></text></g><g><title>[libcuda.so.530.41.03] (7 samples, 0.02%)</title><rect x="97.5430%" y="613" width="0.0231%" height="15" fill="rgb(245,79,54)" fg:x="29497" fg:w="7"/><text x="97.7930%" y="623.50"></text></g><g><title>[libcuda.so.530.41.03] (7 samples, 0.02%)</title><rect x="97.5430%" y="597" width="0.0231%" height="15" fill="rgb(240,10,37)" fg:x="29497" fg:w="7"/><text x="97.7930%" y="607.50"></text></g><g><title>[libcuda.so.530.41.03] (7 samples, 0.02%)</title><rect x="97.5430%" y="581" width="0.0231%" height="15" fill="rgb(214,192,32)" fg:x="29497" fg:w="7"/><text x="97.7930%" y="591.50"></text></g><g><title>[libcuda.so.530.41.03] (7 samples, 0.02%)</title><rect x="97.5430%" y="565" width="0.0231%" height="15" fill="rgb(209,36,54)" fg:x="29497" fg:w="7"/><text x="97.7930%" y="575.50"></text></g><g><title>[libcuda.so.530.41.03] (7 samples, 0.02%)</title><rect x="97.5430%" y="549" width="0.0231%" height="15" fill="rgb(220,10,11)" fg:x="29497" fg:w="7"/><text x="97.7930%" y="559.50"></text></g><g><title>[libcuda.so.530.41.03] (6 samples, 0.02%)</title><rect x="97.5463%" y="533" width="0.0198%" height="15" fill="rgb(221,106,17)" fg:x="29498" fg:w="6"/><text x="97.7963%" y="543.50"></text></g><g><title>[libcuda.so.530.41.03] (6 samples, 0.02%)</title><rect x="97.5463%" y="517" width="0.0198%" height="15" fill="rgb(251,142,44)" fg:x="29498" fg:w="6"/><text x="97.7963%" y="527.50"></text></g><g><title>dfdx::tensor_ops::utilities::ops::try_binary_op::{{closure}} (18 samples, 0.06%)</title><rect x="97.5198%" y="693" width="0.0595%" height="15" fill="rgb(238,13,15)" fg:x="29490" fg:w="18"/><text x="97.7698%" y="703.50"></text></g><g><title>dfdx::tensor_ops::utilities::cuda_kernels::&lt;impl dfdx::tensor_ops::utilities::ops::BinaryKernel&lt;K,E&gt; for dfdx::tensor::cuda::device::Cuda&gt;::backward (17 samples, 0.06%)</title><rect x="97.5231%" y="677" width="0.0562%" height="15" fill="rgb(208,107,27)" fg:x="29491" fg:w="17"/><text x="97.7731%" y="687.50"></text></g><g><title>dfdx::tensor_ops::utilities::backward::Backward::backward (30 samples, 0.10%)</title><rect x="97.4901%" y="773" width="0.0992%" height="15" fill="rgb(205,136,37)" fg:x="29481" fg:w="30"/><text x="97.7401%" y="783.50"></text></g><g><title>&lt;dfdx::tensor::tensor_impls::Tensor&lt;(),E,D,dfdx::tensor::gradients::OwnedTape&lt;E,D&gt;&gt; as dfdx::tensor_ops::utilities::backward::Backward&lt;E,D&gt;&gt;::try_backward (30 samples, 0.10%)</title><rect x="97.4901%" y="757" width="0.0992%" height="15" fill="rgb(250,205,27)" fg:x="29481" fg:w="30"/><text x="97.7401%" y="767.50"></text></g><g><title>dfdx::tensor::gradients::OwnedTape&lt;E,D&gt;::execute (28 samples, 0.09%)</title><rect x="97.4967%" y="741" width="0.0926%" height="15" fill="rgb(210,80,43)" fg:x="29483" fg:w="28"/><text x="97.7467%" y="751.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (28 samples, 0.09%)</title><rect x="97.4967%" y="725" width="0.0926%" height="15" fill="rgb(247,160,36)" fg:x="29483" fg:w="28"/><text x="97.7467%" y="735.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (28 samples, 0.09%)</title><rect x="97.4967%" y="709" width="0.0926%" height="15" fill="rgb(234,13,49)" fg:x="29483" fg:w="28"/><text x="97.7467%" y="719.50"></text></g><g><title>[libcuda.so.530.41.03] (172 samples, 0.57%)</title><rect x="98.1415%" y="469" width="0.5688%" height="15" fill="rgb(234,122,0)" fg:x="29678" fg:w="172"/><text x="98.3915%" y="479.50"></text></g><g><title>[libcuda.so.530.41.03] (135 samples, 0.45%)</title><rect x="98.2639%" y="453" width="0.4464%" height="15" fill="rgb(207,146,38)" fg:x="29715" fg:w="135"/><text x="98.5139%" y="463.50"></text></g><g><title>[libcuda.so.530.41.03] (72 samples, 0.24%)</title><rect x="98.4722%" y="437" width="0.2381%" height="15" fill="rgb(207,177,25)" fg:x="29778" fg:w="72"/><text x="98.7222%" y="447.50"></text></g><g><title>clock_gettime (49 samples, 0.16%)</title><rect x="98.7103%" y="469" width="0.1620%" height="15" fill="rgb(211,178,42)" fg:x="29850" fg:w="49"/><text x="98.9603%" y="479.50"></text></g><g><title>__vdso_clock_gettime (47 samples, 0.16%)</title><rect x="98.7169%" y="453" width="0.1554%" height="15" fill="rgb(230,69,54)" fg:x="29852" fg:w="47"/><text x="98.9669%" y="463.50"></text></g><g><title>[[vdso]] (30 samples, 0.10%)</title><rect x="98.7731%" y="437" width="0.0992%" height="15" fill="rgb(214,135,41)" fg:x="29869" fg:w="30"/><text x="99.0231%" y="447.50"></text></g><g><title>hello_ml::main (22,237 samples, 73.54%)</title><rect x="25.3505%" y="789" width="73.5351%" height="15" fill="rgb(237,67,25)" fg:x="7666" fg:w="22237"/><text x="25.6005%" y="799.50">hello_ml::main</text></g><g><title>hello_ml::generate (392 samples, 1.30%)</title><rect x="97.5893%" y="773" width="1.2963%" height="15" fill="rgb(222,189,50)" fg:x="29511" fg:w="392"/><text x="97.8393%" y="783.50"></text></g><g><title>hello_ml::tensor_to_char (387 samples, 1.28%)</title><rect x="97.6058%" y="757" width="1.2798%" height="15" fill="rgb(245,148,34)" fg:x="29516" fg:w="387"/><text x="97.8558%" y="767.50"></text></g><g><title>hello_ml::closest_to_one (387 samples, 1.28%)</title><rect x="97.6058%" y="741" width="1.2798%" height="15" fill="rgb(222,29,6)" fg:x="29516" fg:w="387"/><text x="97.8558%" y="751.50"></text></g><g><title>&lt;dfdx::tensor::tensor_impls::Tensor&lt;S,E,D,T&gt; as dfdx::tensor::storage_traits::AsArray&gt;::array (387 samples, 1.28%)</title><rect x="97.6058%" y="725" width="1.2798%" height="15" fill="rgb(221,189,43)" fg:x="29516" fg:w="387"/><text x="97.8558%" y="735.50"></text></g><g><title>dfdx::tensor::cuda::allocate::&lt;impl dfdx::tensor::storage_traits::TensorToArray&lt;S,E&gt; for dfdx::tensor::cuda::device::Cuda&gt;::tensor_to_array (387 samples, 1.28%)</title><rect x="97.6058%" y="709" width="1.2798%" height="15" fill="rgb(207,36,27)" fg:x="29516" fg:w="387"/><text x="97.8558%" y="719.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (387 samples, 1.28%)</title><rect x="97.6058%" y="693" width="1.2798%" height="15" fill="rgb(217,90,24)" fg:x="29516" fg:w="387"/><text x="97.8558%" y="703.50"></text></g><g><title>cudarc::driver::safe::core::&lt;impl core::convert::TryFrom&lt;cudarc::driver::safe::core::CudaSlice&lt;T&gt;&gt; for alloc::vec::Vec&lt;T&gt;&gt;::try_from (387 samples, 1.28%)</title><rect x="97.6058%" y="677" width="1.2798%" height="15" fill="rgb(224,66,35)" fg:x="29516" fg:w="387"/><text x="97.8558%" y="687.50"></text></g><g><title>cudarc::driver::safe::alloc::&lt;impl cudarc::driver::safe::core::CudaDevice&gt;::sync_reclaim (387 samples, 1.28%)</title><rect x="97.6058%" y="661" width="1.2798%" height="15" fill="rgb(221,13,50)" fg:x="29516" fg:w="387"/><text x="97.8558%" y="671.50"></text></g><g><title>cudarc::driver::safe::alloc::&lt;impl cudarc::driver::safe::core::CudaDevice&gt;::dtoh_sync_copy_into (387 samples, 1.28%)</title><rect x="97.6058%" y="645" width="1.2798%" height="15" fill="rgb(236,68,49)" fg:x="29516" fg:w="387"/><text x="97.8558%" y="655.50"></text></g><g><title>cudarc::driver::result::memcpy_dtoh_async (387 samples, 1.28%)</title><rect x="97.6058%" y="629" width="1.2798%" height="15" fill="rgb(229,146,28)" fg:x="29516" fg:w="387"/><text x="97.8558%" y="639.50"></text></g><g><title>[libcuda.so.530.41.03] (387 samples, 1.28%)</title><rect x="97.6058%" y="613" width="1.2798%" height="15" fill="rgb(225,31,38)" fg:x="29516" fg:w="387"/><text x="97.8558%" y="623.50"></text></g><g><title>[libcuda.so.530.41.03] (387 samples, 1.28%)</title><rect x="97.6058%" y="597" width="1.2798%" height="15" fill="rgb(250,208,3)" fg:x="29516" fg:w="387"/><text x="97.8558%" y="607.50"></text></g><g><title>[libcuda.so.530.41.03] (387 samples, 1.28%)</title><rect x="97.6058%" y="581" width="1.2798%" height="15" fill="rgb(246,54,23)" fg:x="29516" fg:w="387"/><text x="97.8558%" y="591.50"></text></g><g><title>[libcuda.so.530.41.03] (387 samples, 1.28%)</title><rect x="97.6058%" y="565" width="1.2798%" height="15" fill="rgb(243,76,11)" fg:x="29516" fg:w="387"/><text x="97.8558%" y="575.50"></text></g><g><title>[libcuda.so.530.41.03] (387 samples, 1.28%)</title><rect x="97.6058%" y="549" width="1.2798%" height="15" fill="rgb(245,21,50)" fg:x="29516" fg:w="387"/><text x="97.8558%" y="559.50"></text></g><g><title>[libcuda.so.530.41.03] (387 samples, 1.28%)</title><rect x="97.6058%" y="533" width="1.2798%" height="15" fill="rgb(228,9,43)" fg:x="29516" fg:w="387"/><text x="97.8558%" y="543.50"></text></g><g><title>[libcuda.so.530.41.03] (387 samples, 1.28%)</title><rect x="97.6058%" y="517" width="1.2798%" height="15" fill="rgb(208,100,47)" fg:x="29516" fg:w="387"/><text x="97.8558%" y="527.50"></text></g><g><title>[libcuda.so.530.41.03] (386 samples, 1.28%)</title><rect x="97.6091%" y="501" width="1.2765%" height="15" fill="rgb(232,26,8)" fg:x="29517" fg:w="386"/><text x="97.8591%" y="511.50"></text></g><g><title>[libcuda.so.530.41.03] (263 samples, 0.87%)</title><rect x="98.0159%" y="485" width="0.8697%" height="15" fill="rgb(216,166,38)" fg:x="29640" fg:w="263"/><text x="98.2659%" y="495.50"></text></g><g><title>std::io::Write::write_all (126 samples, 0.42%)</title><rect x="98.9087%" y="789" width="0.4167%" height="15" fill="rgb(251,202,51)" fg:x="29910" fg:w="126"/><text x="99.1587%" y="799.50"></text></g><g><title>zip::write::&lt;impl std::io::Write for zip::write::zip_writer::ZipWriter&lt;W&gt;&gt;::write (85 samples, 0.28%)</title><rect x="99.0443%" y="773" width="0.2811%" height="15" fill="rgb(254,216,34)" fg:x="29951" fg:w="85"/><text x="99.2943%" y="783.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write (60 samples, 0.20%)</title><rect x="99.1270%" y="757" width="0.1984%" height="15" fill="rgb(251,32,27)" fg:x="29976" fg:w="60"/><text x="99.3770%" y="767.50"></text></g><g><title>[unknown] (24,785 samples, 81.96%)</title><rect x="17.3677%" y="805" width="81.9610%" height="15" fill="rgb(208,127,28)" fg:x="5252" fg:w="24785"/><text x="17.6177%" y="815.50">[unknown]</text></g><g><title>__vdso_clock_gettime (202 samples, 0.67%)</title><rect x="99.3287%" y="805" width="0.6680%" height="15" fill="rgb(224,137,22)" fg:x="30037" fg:w="202"/><text x="99.5787%" y="815.50"></text></g><g><title>[libcuda.so.530.41.03] (202 samples, 0.67%)</title><rect x="99.3287%" y="789" width="0.6680%" height="15" fill="rgb(254,70,32)" fg:x="30037" fg:w="202"/><text x="99.5787%" y="799.50"></text></g><g><title>all (30,240 samples, 100%)</title><rect x="0.0000%" y="837" width="100.0000%" height="15" fill="rgb(229,75,37)" fg:x="0" fg:w="30240"/><text x="0.2500%" y="847.50"></text></g><g><title>hello_ml (30,209 samples, 99.90%)</title><rect x="0.1025%" y="821" width="99.8975%" height="15" fill="rgb(252,64,23)" fg:x="31" fg:w="30209"/><text x="0.3525%" y="831.50">hello_ml</text></g></svg></svg>